

----QUIT----(20 March 2023 11:15:29) CuisUniversity-5706.image priorSource: 4313282!

----STARTUP---- (20 March 2023 11:15:29) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5706.image!


----QUIT----(20 March 2023 11:15:30) CuisUniversity-5706.image priorSource: 8712809!

----STARTUP---- (13 May 2023 13:04:11) as C:\Users\Usuario\Desktop\Exactas\Inge1\cuis3\windows64\CuisUniversity-5706.image!


TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

!classDefinition: #MarsRoverTest category: 'MarsRoverExersice' stamp: 'AG 5/13/2023 13:04:44'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

!classDefinition: #MarsRover category: 'MarsRoverExersice' stamp: 'AG 5/13/2023 13:06:08'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!
!MarsRoverTest methodsFor: 'no messages' stamp: 'AG 5/13/2023 13:05:59'!
test01

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Norte.! !

!testRun: #MarsRoverTest #test01 stamp: 'AG 5/13/2023 13:06:13'!
ERROR!
!MarsRover class methodsFor: 'instance creation' stamp: 'AG 5/13/2023 13:06:18'!
inPosition: aPoint atDirection: aSymbol 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeInPosition: aPoint atDirection: aSymbol ! !
!MarsRover class methodsFor: 'instance creation' stamp: 'AG 5/13/2023 13:06:54' prior: 50603969!
inPosition: anInitialPosition atDirection: aInitialDirection 
	
	^self new initializeInPosition: anInitialPosition atDirection: 	aInitialDirection ! !

!testRun: #MarsRoverTest #test01 stamp: 'AG 5/13/2023 13:06:56'!
ERROR!

!classDefinition: #MarsRover category: 'MarsRoverExersice' stamp: 'AG 5/13/2023 13:07:09'!
Object subclass: #MarsRover
	instanceVariableNames: 'initialPosition'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

!classDefinition: #MarsRover category: 'MarsRoverExersice' stamp: 'AG 5/13/2023 13:07:09'!
Object subclass: #MarsRover
	instanceVariableNames: 'initialPosition initialDirection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!
!MarsRover methodsFor: 'initialization' stamp: 'AG 5/13/2023 13:07:09'!
initializeInPosition: anInitialPosition atDirection: aInitialDirection 
	self shouldBeImplemented.
	initialPosition := anInitialPosition.
	initialDirection := aInitialDirection.! !
!MarsRover methodsFor: 'initialization' stamp: 'AG 5/13/2023 13:07:16' prior: 50604004!
initializeInPosition: anInitialPosition atDirection: aInitialDirection 
! !

!testRun: #MarsRoverTest #test01 stamp: 'AG 5/13/2023 13:07:17'!
ERROR!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 13:07:21'!
position
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 13:07:27' prior: 50604020!
position
	^0@0! !

!testRun: #MarsRoverTest #test01 stamp: 'AG 5/13/2023 13:07:28'!
ERROR!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 13:07:33'!
direction
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 13:07:39' prior: 50604029!
direction
	^#Norte! !

!testRun: #MarsRoverTest #test01 stamp: 'AG 5/13/2023 13:07:40'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'AG 5/13/2023 13:07:40'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'AG 5/13/2023 13:08:33'!
test01MarsRoverCreationHasInitialPositionAndDirection

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Norte.! !

!methodRemoval: MarsRoverTest #test01 stamp: 'AG 5/13/2023 13:08:33'!
test01

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Norte.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 13:10:53'!
test02

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	rover commands: ''.
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Norte.! !

!testRun: #MarsRoverTest #test02 stamp: 'AG 5/13/2023 13:10:56'!
ERROR!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 13:11:08'!
commands: aRenameMe1 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 13:11:31' prior: 50604069!
commands: aStringOfCommands 
	! !

!testRun: #MarsRoverTest #test02 stamp: 'AG 5/13/2023 13:11:32'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 13:11:32'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'AG 5/13/2023 13:11:32'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 13:12:12'!
test02EmptyComandsShouldNotMove

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	rover commands: ''.
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Norte.! !

!methodRemoval: MarsRoverTest #test02 stamp: 'AG 5/13/2023 13:12:17'!
test02

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	rover commands: ''.
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Norte.!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 13:12:21'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 13:12:21'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 13:12:21'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 13:16:25'!
test03

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	rover commands: 'f'.
	self assert: rover position equals: 1@0.
	self assert: rover direction equals: #Norte.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 13:16:39' prior: 50604113!
test03

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	rover commands: 'f'.
	self assert: rover position equals: 0@1.
	self assert: rover direction equals: #Norte.! !

!testRun: #MarsRoverTest #test03 stamp: 'AG 5/13/2023 13:16:42'!
FAILURE!

!classDefinition: #MarsRover category: 'MarsRoverExersice' stamp: 'AG 5/13/2023 13:18:15'!
Object subclass: #MarsRover
	instanceVariableNames: 'initialPosition initialDirection position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 13:18:13' prior: 50604024!
position
	^position! !
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 13:18:18' prior: 50604142!
position
	^position.! !
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 13:18:36' prior: 50604074!
commands: aStringOfCommands 
	position = 0@1.! !
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 13:18:57' prior: 50604150!
commands: aStringOfCommands 
	position := 0@1.! !
!MarsRover methodsFor: 'initialization' stamp: 'AG 5/13/2023 13:19:13' prior: 50604013!
initializeInPosition: anInitialPosition atDirection: aInitialDirection 
	position := anInitialPosition .! !

!testRun: #MarsRoverTest #test03 stamp: 'AG 5/13/2023 13:19:18'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 13:19:18'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 13:19:18'!
FAILURE!

!testRun: #MarsRoverTest #test03 stamp: 'AG 5/13/2023 13:19:18'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 13:19:18'!
FAILURE!

!testRun: #MarsRoverTest #test03 stamp: 'AG 5/13/2023 13:19:25'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 13:19:25'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 13:19:25'!
FAILURE!

!testRun: #MarsRoverTest #test03 stamp: 'AG 5/13/2023 13:19:25'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 13:19:25'!
FAILURE!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 13:20:31' prior: 50604155!
commands: aStringOfCommands 
	aStringOfCommands = 'f' ifTrue: [position := 0@1].! !

!testRun: #MarsRoverTest #test03 stamp: 'AG 5/13/2023 13:20:37'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'AG 5/13/2023 13:20:39'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 13:20:41'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 13:20:41'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'AG 5/13/2023 13:20:41'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 13:21:41'!
test03MoveFowardNorthChangesYPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	rover commands: 'f'.
	self assert: rover position equals: 0@1.
	self assert: rover direction equals: #Norte.! !

!methodRemoval: MarsRoverTest #test03 stamp: 'AG 5/13/2023 13:21:41'!
test03

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	rover commands: 'f'.
	self assert: rover position equals: 0@1.
	self assert: rover direction equals: #Norte.!

0@-1!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 13:25:04'!
test04

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'b'.
	
	self assert: rover position equals: 0@-1.
	self assert: rover direction equals: #Norte.! !

!testRun: #MarsRoverTest #test04 stamp: 'AG 5/13/2023 13:25:06'!
FAILURE!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 13:25:44' prior: 50604196!
commands: aStringOfCommands 
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].! !

!testRun: #MarsRoverTest #test04 stamp: 'AG 5/13/2023 13:25:47'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 13:25:47'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 13:25:47'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 13:25:47'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'AG 5/13/2023 13:25:47'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 13:26:41'!
test04MoveBackwardFAcingNorthSubstractsOneYPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'b'.
	
	self assert: rover position equals: 0@-1.
	self assert: rover direction equals: #Norte.! !

!methodRemoval: MarsRoverTest #test04 stamp: 'AG 5/13/2023 13:26:41'!
test04

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'b'.
	
	self assert: rover position equals: 0@-1.
	self assert: rover direction equals: #Norte.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 13:26:53'!
test04MoveBackwardFacingNorthSubstractsOneYPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'b'.
	
	self assert: rover position equals: 0@-1.
	self assert: rover direction equals: #Norte.! !

!methodRemoval: MarsRoverTest #test04MoveBackwardFAcingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 13:26:53'!
test04MoveBackwardFAcingNorthSubstractsOneYPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'b'.
	
	self assert: rover position equals: 0@-1.
	self assert: rover direction equals: #Norte.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 13:28:33' prior: 50604284!
test04MoveBackwardFacingNorthSubstractsOneYPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'fb'.
	
	self assert: rover position equals: 0@-1.
	self assert: rover direction equals: #Norte.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 13:28:39' prior: 50604306!
test04MoveBackwardFacingNorthSubstractsOneYPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'fb'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Norte.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 13:28:55' prior: 50604317!
test04MoveBackwardFacingNorthSubstractsOneYPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'fb'.
	
	self assert: rover position equals: 0@0.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 13:29:05' prior: 50604215!
test03MoveFowardNorthChangesYPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	rover commands: 'f'.
	
	self assert: rover position equals: 0@1.
	! !

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 13:29:23'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 13:29:23'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 13:29:23'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 13:29:23'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 13:29:23'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 13:29:26'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 13:29:26'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 13:29:26'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 13:29:26'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 13:29:26'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 13:29:50' prior: 50604328!
test04MoveBackwardFacingNorthSubstractsOneYPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'ff'.
	
	self assert: rover position equals: 0@2.! !

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 13:29:51'!
FAILURE!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 13:30:09' prior: 50604381!
test04MoveBackwardFacingNorthSubstractsOneYPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'b'.
	
	self assert: rover position equals: 0@-1.! !

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 13:30:11'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 13:30:11'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 13:30:11'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 13:30:11'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 13:30:11'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 13:30:16'!
test05

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'b'.
	
	self assert: rover position equals: 0@-1.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 13:30:49' prior: 50604420!
test05

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'ff'.
	
	self assert: rover position equals: 0@2.! !

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 13:30:49'!
FAILURE!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 13:32:01' prior: 50604244!
commands: aStringOfCommands 
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'ff' ifTrue: [position := 0@2].
	! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 13:32:02'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 13:32:02'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 13:32:02'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 13:32:02'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 13:32:02'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 13:34:29'!
test05TwoForwardCommandsChangesPositionTwice

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'ff'.
	
	self assert: rover position equals: 0@2.! !

!methodRemoval: MarsRoverTest #test05 stamp: 'AG 5/13/2023 13:34:29'!
test05

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'ff'.
	
	self assert: rover position equals: 0@2.!

----SNAPSHOT----(13 May 2023 13:34:53) CuisUniversity-5706.image priorSource: 8713034!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 13:36:12'!
test04TwoForwardCommandsChangesPositionTwice

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'ff'.
	
	self assert: rover position equals: 0@2.! !

!methodRemoval: MarsRoverTest #test05TwoForwardCommandsChangesPositionTwice stamp: 'AG 5/13/2023 13:36:12'!
test05TwoForwardCommandsChangesPositionTwice

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'ff'.
	
	self assert: rover position equals: 0@2.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 13:36:21'!
test05MoveBackwardFacingNorthSubstractsOneYPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'b'.
	
	self assert: rover position equals: 0@-1.! !

!methodRemoval: MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 13:36:21'!
test04MoveBackwardFacingNorthSubstractsOneYPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'b'.
	
	self assert: rover position equals: 0@-1.!

----SNAPSHOT----(13 May 2023 13:37:12) CuisUniversity-5706.image priorSource: 8730482!

----STARTUP---- (13 May 2023 15:33:36) as C:\Users\Usuario\Desktop\Exactas\Inge1\cuis3\windows64\CuisUniversity-5706.image!

!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 15:35:00' prior: 50604337!
test03MoveFowardNorthChangesYPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'f'.
	
	self assert: rover position equals: 0@1.
	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 15:37:56'!
test08TwoForwardCommandsChangesPositionTwice

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'ff'.
	
	self assert: rover position equals: 0@2.! !

!methodRemoval: MarsRoverTest #test04TwoForwardCommandsChangesPositionTwice stamp: 'AG 5/13/2023 15:37:56'!
test04TwoForwardCommandsChangesPositionTwice

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'ff'.
	
	self assert: rover position equals: 0@2.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 15:38:08'!
test04MoveBackwardFacingNorthSubstractsOneYPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'b'.
	
	self assert: rover position equals: 0@-1.! !

!methodRemoval: MarsRoverTest #test05MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 15:38:08'!
test05MoveBackwardFacingNorthSubstractsOneYPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'b'.
	
	self assert: rover position equals: 0@-1.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 15:39:13'!
test05

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'l'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Oeste.! !

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 15:39:15'!
FAILURE!

rover direction!

!classDefinition: #MarsRover category: 'MarsRoverExersice' stamp: 'AG 5/13/2023 15:40:01'!
Object subclass: #MarsRover
	instanceVariableNames: 'initialPosition initialDirection position direction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 15:40:00' prior: 50604033!
direction
	^direction.! !

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 15:40:04'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 15:40:04'!
FAILURE!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 15:40:04'!
FAILURE!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 15:40:04'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 15:40:04'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 15:40:04'!
FAILURE!

!testRun: #MarsRoverTest #test08TwoForwardCommandsChangesPositionTwice stamp: 'AG 5/13/2023 15:40:04'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 15:40:07'!
FAILURE!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 15:40:36'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 15:40:36'!
PASSED!

!testRun: #MarsRoverTest #test08TwoForwardCommandsChangesPositionTwice stamp: 'AG 5/13/2023 15:40:36'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 15:40:36'!
FAILURE!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 15:40:36'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 15:40:37'!
FAILURE!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 15:40:38'!
FAILURE!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 15:40:49'!
FAILURE!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 15:41:41'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 15:42:11'!
FAILURE!
!MarsRover methodsFor: 'initialization' stamp: 'AG 5/13/2023 15:42:34' prior: 50604160!
initializeInPosition: anInitialPosition atDirection: aInitialDirection 
	
	position := anInitialPosition .
	direction := aInitialDirection .! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 15:42:39'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 15:42:39'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 15:42:39'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 15:42:39'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 15:42:39'!
FAILURE!

!testRun: #MarsRoverTest #test08TwoForwardCommandsChangesPositionTwice stamp: 'AG 5/13/2023 15:42:39'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 15:42:39'!
FAILURE!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 15:43:25' prior: 50604438!
commands: aStringOfCommands 
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [direction := #Oeste].
	"aStringOfCommands = 'ff' ifTrue: [position := 0@2].
	"! !

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 15:43:44'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 15:43:49'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 15:43:49'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 15:43:49'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 15:43:49'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 15:43:49'!
PASSED!

!testRun: #MarsRoverTest #test08TwoForwardCommandsChangesPositionTwice stamp: 'AG 5/13/2023 15:43:49'!
FAILURE!

!testRun: #MarsRoverTest #test08TwoForwardCommandsChangesPositionTwice stamp: 'AG 5/13/2023 15:43:49'!
FAILURE!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 15:44:08'!
_test08TwoForwardCommandsChangesPositionTwice

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'ff'.
	
	self assert: rover position equals: 0@2.! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 15:44:10'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 15:44:10'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 15:44:10'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 15:44:10'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 15:44:10'!
PASSED!

!testRun: #MarsRoverTest #test08TwoForwardCommandsChangesPositionTwice stamp: 'AG 5/13/2023 15:44:10'!
FAILURE!

!testRun: #MarsRoverTest #test08TwoForwardCommandsChangesPositionTwice stamp: 'AG 5/13/2023 15:44:10'!
FAILURE!

!methodRemoval: MarsRoverTest #test08TwoForwardCommandsChangesPositionTwice stamp: 'AG 5/13/2023 15:44:18'!
test08TwoForwardCommandsChangesPositionTwice

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'ff'.
	
	self assert: rover position equals: 0@2.!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 15:44:20'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 15:44:20'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 15:44:20'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 15:44:20'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 15:44:20'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 15:44:34'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 15:44:34'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 15:44:34'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 15:44:34'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 15:44:34'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 15:44:34'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 15:46:37'!
test06

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Sur.
	
	rover commands: 'l'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Oeste.! !

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 15:46:38'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 15:46:38'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 15:46:38'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 15:46:38'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 15:46:38'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 15:46:38'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 15:46:38'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 15:47:02' prior: 50604795!
test06

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Sur.
	
	rover commands: 'l'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Este.! !

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 15:47:03'!
FAILURE!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 15:47:17'!
FAILURE!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 15:47:27'!
FAILURE!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 15:48:52' prior: 50604683!
commands: aStringOfCommands 
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [
		direction := #Norte ifTrue:[direction := #Oeste].
		direction := #Sur ifTrue:[direction := #Este].
		].
	"aStringOfCommands = 'ff' ifTrue: [position := 0@2].
	"! !

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 15:48:56'!
FAILURE!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 15:49:06'!
ERROR!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 15:49:56'!
ERROR!

rover direction!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 15:51:01'!
ERROR!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 15:51:28' prior: 50604841!
commands: aStringOfCommands 
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [
		(direction = #Norte) ifTrue:[direction := #Oeste].
		(direction = #Sur) ifTrue:[direction := #Este].
		].
	"aStringOfCommands = 'ff' ifTrue: [position := 0@2].
	"! !

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 15:51:30'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 15:51:30'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 15:51:30'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 15:51:30'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 15:51:30'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 15:51:30'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 15:51:30'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 15:51:57'!
test07

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'l'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Sur.! !

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 15:51:59'!
FAILURE!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 15:52:27' prior: 50604864!
commands: aStringOfCommands 
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [
		(direction = #Norte) ifTrue:[direction := #Oeste].
		(direction = #Sur) ifTrue:[direction := #Este].
		(direction = #Oeste) ifTrue:[direction := #Sur].
		].
	"aStringOfCommands = 'ff' ifTrue: [position := 0@2].
	"! !

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 15:52:31'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 15:52:31'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 15:52:31'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 15:52:31'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 15:52:31'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 15:52:31'!
FAILURE!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 15:52:31'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 15:52:31'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 15:52:31'!
FAILURE!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 15:53:45'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 15:53:45'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 15:53:45'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 15:53:45'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 15:53:45'!
FAILURE!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 15:53:45'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 15:53:45'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 15:53:45'!
FAILURE!

rover direction!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 15:56:53' prior: 50604909!
commands: aStringOfCommands 
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [
		(direction = #Norte) ifTrue:[direction := #Oeste]
			ifFalse:[
				(direction = #Sur) ifTrue:[direction := #Este]
				ifFalse: [
					(direction = #Oeste) ifTrue:[direction := #Sur]
					]
				].
		].
	"aStringOfCommands = 'ff' ifTrue: [position := 0@2].
	"! !

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 15:56:56'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 15:57:00'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 15:57:00'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 15:57:00'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 15:57:00'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 15:57:00'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 15:57:00'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 15:57:00'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 15:57:28'!
test08

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Este.
	
	rover commands: 'l'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Norte.! !

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 15:57:28'!
FAILURE!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 15:59:42' prior: 50604973!
commands: aStringOfCommands 
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [
		(direction = #Norte) ifTrue:[direction := #Oeste]
			ifFalse:[
				(direction = #Sur) ifTrue:[direction := #Este]
				ifFalse: [
					(direction = #Oeste) ifTrue:[direction := #Sur]
					ifFalse:[
						(direction = #Este) ifTrue: [direction := #Norte] 
						ifFalse:[
							self error:'error'
							] 
						]
					]
				].
		].
	"aStringOfCommands = 'ff' ifTrue: [position := 0@2].
	"! !

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 15:59:45'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 15:59:45'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 15:59:45'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 15:59:45'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 15:59:45'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 15:59:45'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 15:59:45'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 15:59:45'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 15:59:45'!
PASSED!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 16:07:58'!
rotateLeft

		(direction = #Norte) ifTrue:[direction := #Oeste]
			ifFalse:[
				(direction = #Sur) ifTrue:[direction := #Este]
				ifFalse: [
					(direction = #Oeste) ifTrue:[direction := #Sur]
					ifFalse:[
						(direction = #Este) ifTrue: [direction := #Norte] 
						ifFalse:[
							self error:'error'
							] 
						]
					]
				].
		! !
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 16:08:20' prior: 50605023!
commands: aStringOfCommands 
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [ self rotateLeft .	].
	"aStringOfCommands = 'ff' ifTrue: [position := 0@2].
	"! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 16:08:21'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 16:08:21'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 16:08:21'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 16:08:21'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 16:08:21'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 16:08:21'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 16:08:21'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 16:08:21'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 16:09:01'!
test09

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Este.
	
	rover commands: 'r'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Sur.! !

!testRun: #MarsRoverTest #test09 stamp: 'AG 5/13/2023 16:09:02'!
FAILURE!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 16:10:11' prior: 50605083!
commands: aStringOfCommands 
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [ self rotateLeft .	].
	aStringOfCommands = 'r' ifTrue: [ 
		direction := #Sur
		].
	"aStringOfCommands = 'ff' ifTrue: [position := 0@2].
	"! !

!testRun: #MarsRoverTest #test09 stamp: 'AG 5/13/2023 16:10:14'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 16:10:14'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 16:10:14'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 16:10:14'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 16:10:14'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 16:10:14'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 16:10:14'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 16:10:14'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 16:10:14'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'AG 5/13/2023 16:10:14'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 16:10:24' prior: 50605117!
test09

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Sur.
	
	rover commands: 'r'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Oeste.! !

!testRun: #MarsRoverTest #test09 stamp: 'AG 5/13/2023 16:10:25'!
FAILURE!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 16:10:36'!
_test09

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Sur.
	
	rover commands: 'r'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Oeste.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 16:10:55' prior: 50605169!
test09

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Este.
	
	rover commands: 'r'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Sur.! !

!testRun: #MarsRoverTest #test09 stamp: 'AG 5/13/2023 16:11:03'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 16:11:03'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 16:11:03'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 16:11:03'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 16:11:03'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 16:11:03'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 16:11:03'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 16:11:03'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 16:11:03'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'AG 5/13/2023 16:11:03'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 16:11:11'!
test10

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Sur.
	
	rover commands: 'r'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Oeste.! !

!testRun: #MarsRoverTest #test10 stamp: 'AG 5/13/2023 16:11:13'!
FAILURE!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 16:12:09' prior: 50605128!
commands: aStringOfCommands 
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [ self rotateLeft .	].
	aStringOfCommands = 'r' ifTrue: [ 
		direction =#Este ifTrue: [direction := #Sur]
			ifFalse:[direction := #Oeste]
		].
	"aStringOfCommands = 'ff' ifTrue: [position := 0@2].
	"! !

!testRun: #MarsRoverTest #test10 stamp: 'AG 5/13/2023 16:12:12'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 16:12:12'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 16:12:12'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 16:12:12'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 16:12:12'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 16:12:12'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 16:12:12'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 16:12:12'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 16:12:12'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'AG 5/13/2023 16:12:12'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'AG 5/13/2023 16:12:12'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 16:12:30'!
test11

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'r'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Norte.! !

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 16:12:31'!
FAILURE!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 16:13:47' prior: 50605236!
commands: aStringOfCommands 
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [ self rotateLeft .	].
	aStringOfCommands = 'r' ifTrue: [ 
		direction =#Este ifTrue: [direction := #Sur]
			ifFalse:[ direction = #Sur ifTrue:[
				direction := #Oeste]
			ifFalse:[direction = #Norte]
			]
		].
	"aStringOfCommands = 'ff' ifTrue: [position := 0@2].
	"! !

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 16:13:50'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 16:13:50'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 16:13:50'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 16:13:50'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 16:13:50'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 16:13:50'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 16:13:50'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 16:13:50'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 16:13:50'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'AG 5/13/2023 16:13:50'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'AG 5/13/2023 16:13:50'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 16:13:50'!
FAILURE!

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 16:13:50'!
FAILURE!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 16:15:07' prior: 50605291!
commands: aStringOfCommands 
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [ self rotateLeft .	].
	aStringOfCommands = 'r' ifTrue: [ 
		direction =#Este ifTrue: [direction := #Sur]
			ifFalse:[ 
				direction = #Sur ifTrue:[direction := #Oeste]
					ifFalse:[direction := #Norte]
			]
		].
	"aStringOfCommands = 'ff' ifTrue: [position := 0@2].
	"! !

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 16:15:09'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 16:15:11'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 16:15:11'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 16:15:11'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 16:15:11'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 16:15:11'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 16:15:11'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 16:15:11'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 16:15:11'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 16:15:11'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'AG 5/13/2023 16:15:11'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'AG 5/13/2023 16:15:11'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 16:15:11'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 16:15:27' prior: 50605280!
test11

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'r'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Este.! !

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 16:15:28'!
FAILURE!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 16:16:19' prior: 50605343!
commands: aStringOfCommands 
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [ self rotateLeft .	].
	aStringOfCommands = 'r' ifTrue: [ 
		direction =#Este ifTrue: [direction := #Sur]
			ifFalse:[ 
				direction = #Sur ifTrue:[direction := #Oeste]
					ifFalse:[direction = #Oeste ifTrue:[direction := #Norte]
						ifFalse:[direction = #Este]]
			]
		].
	"aStringOfCommands = 'ff' ifTrue: [position := 0@2].
	"! !

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 16:16:22'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 16:16:22'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 16:16:22'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 16:16:22'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 16:16:22'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 16:16:22'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 16:16:22'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 16:16:22'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 16:16:22'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'AG 5/13/2023 16:16:22'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'AG 5/13/2023 16:16:22'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 16:16:22'!
FAILURE!

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 16:16:22'!
FAILURE!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 16:16:32' prior: 50605406!
commands: aStringOfCommands 
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [ self rotateLeft .	].
	aStringOfCommands = 'r' ifTrue: [ 
		direction =#Este ifTrue: [direction := #Sur]
			ifFalse:[ 
				direction = #Sur ifTrue:[direction := #Oeste]
					ifFalse:[direction = #Oeste ifTrue:[direction := #Norte]
						ifFalse:[direction := #Este]]
			]
		].
	"aStringOfCommands = 'ff' ifTrue: [position := 0@2].
	"! !

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 16:16:35'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 16:16:36'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 16:16:36'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 16:16:36'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 16:16:36'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 16:16:36'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 16:16:36'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 16:16:36'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 16:16:36'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 16:16:36'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'AG 5/13/2023 16:16:36'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'AG 5/13/2023 16:16:36'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 16:16:36'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 16:16:47' prior: 50605395!
test11

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'r'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Norte.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 16:17:01'!
test12

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'r'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Este.! !

!testRun: #MarsRoverTest #test12 stamp: 'AG 5/13/2023 16:17:03'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 16:17:04'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 16:17:04'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 16:17:04'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 16:17:04'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 16:17:04'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 16:17:04'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 16:17:04'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 16:17:04'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'AG 5/13/2023 16:17:04'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'AG 5/13/2023 16:17:04'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 16:17:04'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'AG 5/13/2023 16:17:04'!
PASSED!

!methodRemoval: MarsRoverTest #_test09 stamp: 'AG 5/13/2023 16:17:17'!
_test09

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Sur.
	
	rover commands: 'r'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Oeste.!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 16:18:01'!
rotateRight

	^ direction =#Este ifTrue: [direction := #Sur]
			ifFalse:[ 
				direction = #Sur ifTrue:[direction := #Oeste]
					ifFalse:[direction = #Oeste ifTrue:[direction := #Norte]
						ifFalse:[direction := #Este]]
			]! !
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 16:18:01' prior: 50605460!
commands: aStringOfCommands 
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [ self rotateLeft .	].
	aStringOfCommands = 'r' ifTrue: [ 
		self rotateRight
		].
	"aStringOfCommands = 'ff' ifTrue: [position := 0@2].
	"! !
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 16:18:08' prior: 50605584!
commands: aStringOfCommands 
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [ self rotateLeft .	].
	aStringOfCommands = 'r' ifTrue: [ self rotateRight		].
	"aStringOfCommands = 'ff' ifTrue: [position := 0@2].
	"! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 16:18:14'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 16:18:14'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 16:18:14'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 16:18:14'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 16:18:14'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 16:18:14'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 16:18:14'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 16:18:14'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'AG 5/13/2023 16:18:14'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'AG 5/13/2023 16:18:15'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 16:18:15'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'AG 5/13/2023 16:18:15'!
PASSED!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 16:19:13' prior: 50605574!
rotateRight

	^ direction =#Este ifTrue: [direction := #Sur]
			ifFalse:[ 
				direction = #Sur ifTrue:[direction := #Oeste]
					ifFalse:[
						direction = #Oeste ifTrue:[direction := #Norte]
							ifFalse:[direction := #Este]
							]
			]! !

MarsRover subclass: #MarsRoverEast
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

!classDefinition: #MarsRoverEast category: 'MarsRoverExersice' stamp: 'AG 5/13/2023 16:19:49'!
MarsRover subclass: #MarsRoverEast
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

!classRemoval: #MarsRoverEast stamp: 'AG 5/13/2023 16:21:25'!
MarsRover subclass: #MarsRoverEast
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

----SNAPSHOT----(13 May 2023 16:21:29) CuisUniversity-5706.image priorSource: 8731731!

Object subclass: #Direccion
	instanceVariableNames: 'initialPosition initialDirection position direction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

!classDefinition: #Direccion category: 'MarsRoverExersice' stamp: 'AG 5/13/2023 16:25:20'!
Object subclass: #Direccion
	instanceVariableNames: 'initialPosition initialDirection position direction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

Direccion subclass: #Norte
	instanceVariableNames: 'initialPosition initialDirection position direction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

Direccion subclass: #Norte
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

!classDefinition: #Norte category: 'MarsRoverExersice' stamp: 'AG 5/13/2023 16:25:37'!
Direccion subclass: #Norte
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 16:34:30'!
test13

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'rr'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Sur.! !

!testRun: #MarsRoverTest #test13 stamp: 'AG 5/13/2023 16:34:31'!
FAILURE!

'rr' at:1!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 16:38:54' prior: 50605597!
commands: aStringOfCommands 
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [ self rotateLeft .	].
	(aStringOfCommands at: 1 )= $r ifTrue: [ ((aStringOfCommands at: 2 )= $r) ifTrue: [self rotateRigth rotateRitgh] 
		IfFalse:[self rotateRight]	.
			].
	"aStringOfCommands = 'ff' ifTrue: [position := 0@2].
	"! !
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 16:40:45' prior: 50605716!
commands: aStringOfCommands 
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [ self rotateLeft .	].
	(aStringOfCommands at: 1 )= $r ifTrue: [ ((aStringOfCommands at: 2 )= $r) ifTrue: [self rotateRight rotateRight ] 
		ifFalse:[self rotateRight]	.
			].
	"aStringOfCommands = 'ff' ifTrue: [position := 0@2].
	"! !

!testRun: #MarsRoverTest #test13 stamp: 'AG 5/13/2023 16:40:57'!
ERROR!

!testRun: #MarsRoverTest #test13 stamp: 'AG 5/13/2023 16:41:01'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 16:41:01'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 16:41:01'!
ERROR!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 16:41:01'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 16:41:01'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 16:41:01'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 16:41:01'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 16:41:01'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 16:41:01'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'AG 5/13/2023 16:41:01'!
ERROR!

!testRun: #MarsRoverTest #test10 stamp: 'AG 5/13/2023 16:41:01'!
ERROR!

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 16:41:01'!
ERROR!

!testRun: #MarsRoverTest #test12 stamp: 'AG 5/13/2023 16:41:01'!
ERROR!

!testRun: #MarsRoverTest #test13 stamp: 'AG 5/13/2023 16:41:01'!
ERROR!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 16:41:11'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 16:41:11'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 16:41:11'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 16:41:11'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 16:41:11'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 16:41:11'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 16:41:11'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 16:41:11'!
ERROR!

!testRun: #MarsRoverTest #test09 stamp: 'AG 5/13/2023 16:41:11'!
ERROR!

!testRun: #MarsRoverTest #test10 stamp: 'AG 5/13/2023 16:41:11'!
ERROR!

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 16:41:11'!
ERROR!

!testRun: #MarsRoverTest #test12 stamp: 'AG 5/13/2023 16:41:11'!
ERROR!

!testRun: #MarsRoverTest #test13 stamp: 'AG 5/13/2023 16:41:11'!
ERROR!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 16:41:12'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 16:41:12'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 16:41:12'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 16:41:12'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 16:41:12'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 16:41:12'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 16:41:12'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 16:41:12'!
ERROR!

!testRun: #MarsRoverTest #test09 stamp: 'AG 5/13/2023 16:41:12'!
ERROR!

!testRun: #MarsRoverTest #test10 stamp: 'AG 5/13/2023 16:41:12'!
ERROR!

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 16:41:12'!
ERROR!

!testRun: #MarsRoverTest #test12 stamp: 'AG 5/13/2023 16:41:12'!
ERROR!

!testRun: #MarsRoverTest #test13 stamp: 'AG 5/13/2023 16:41:12'!
ERROR!

!testRun: #MarsRoverTest #test13 stamp: 'AG 5/13/2023 16:41:16'!
ERROR!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 16:41:43' prior: 50605732!
commands: aStringOfCommands 
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [ self rotateLeft .	].
	(aStringOfCommands at: 1 )= $r ifTrue: [ ((aStringOfCommands at: 2 )= $r) ifTrue: [self rotateRight. self rotateRight ] 
		ifFalse:[self rotateRight]	.
			].
	"aStringOfCommands = 'ff' ifTrue: [position := 0@2].
	"! !

!testRun: #MarsRoverTest #test13 stamp: 'AG 5/13/2023 16:41:45'!
FAILURE!

!testRun: #MarsRoverTest #test13 stamp: 'AG 5/13/2023 16:41:51'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 16:41:51'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 16:41:51'!
ERROR!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 16:41:51'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 16:41:52'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 16:41:52'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 16:41:52'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 16:41:52'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 16:41:52'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'AG 5/13/2023 16:41:52'!
ERROR!

!testRun: #MarsRoverTest #test10 stamp: 'AG 5/13/2023 16:41:52'!
ERROR!

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 16:41:52'!
ERROR!

!testRun: #MarsRoverTest #test12 stamp: 'AG 5/13/2023 16:41:52'!
ERROR!

!testRun: #MarsRoverTest #test13 stamp: 'AG 5/13/2023 16:41:52'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'AG 5/13/2023 16:42:04'!
ERROR!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 16:43:13' prior: 50605858!
commands: aStringOfCommands 
	aStringOfCommands empty ifFalse:[
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [ self rotateLeft .	].
	(aStringOfCommands at: 1 )= $r ifTrue: [ ((aStringOfCommands at: 2 )= $r) ifTrue: [self rotateRight. self rotateRight ] 
		ifFalse:[self rotateRight]	.
			].]
	
	"aStringOfCommands = 'ff' ifTrue: [position := 0@2].
	"! !

!testRun: #MarsRoverTest #test10 stamp: 'AG 5/13/2023 16:43:15'!
ERROR!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 16:43:19'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 16:43:19'!
ERROR!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 16:43:19'!
ERROR!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 16:43:19'!
ERROR!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 16:43:19'!
ERROR!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 16:43:19'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 16:43:19'!
ERROR!

!testRun: #MarsRoverTest #test13 stamp: 'AG 5/13/2023 16:43:19'!
ERROR!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 16:43:19'!
ERROR!

!testRun: #MarsRoverTest #test09 stamp: 'AG 5/13/2023 16:43:19'!
ERROR!

!testRun: #MarsRoverTest #test10 stamp: 'AG 5/13/2023 16:43:19'!
ERROR!

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 16:43:19'!
ERROR!

!testRun: #MarsRoverTest #test12 stamp: 'AG 5/13/2023 16:43:19'!
ERROR!

!classRemoval: #Norte stamp: 'AG 5/13/2023 16:43:38'!
Direccion subclass: #Norte
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

!classRemoval: #Direccion stamp: 'AG 5/13/2023 16:43:38'!
Object subclass: #Direccion
	instanceVariableNames: 'initialPosition initialDirection position direction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

'' empty!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 16:44:11' prior: 50605915!
commands: aStringOfCommands 
	aStringOfCommands isEmpty ifFalse:[
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [ self rotateLeft .	].
	(aStringOfCommands at: 1 )= $r ifTrue: [ ((aStringOfCommands at: 2 )= $r) ifTrue: [self rotateRight. self rotateRight ] 
		ifFalse:[self rotateRight]	.
			].]
	
	"aStringOfCommands = 'ff' ifTrue: [position := 0@2].
	"! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 16:44:14'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 16:44:14'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 16:44:14'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 16:44:14'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 16:44:14'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 16:44:14'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 16:44:14'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 16:44:14'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'AG 5/13/2023 16:44:14'!
ERROR!

!testRun: #MarsRoverTest #test10 stamp: 'AG 5/13/2023 16:44:14'!
ERROR!

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 16:44:14'!
ERROR!

!testRun: #MarsRoverTest #test12 stamp: 'AG 5/13/2023 16:44:14'!
ERROR!

!testRun: #MarsRoverTest #test13 stamp: 'AG 5/13/2023 16:44:14'!
PASSED!

'' isEmpty !
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 16:47:01' prior: 50605982!
commands: aStringOfCommands 
	aStringOfCommands isEmpty ifFalse:[
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [ self rotateLeft .	].
	(aStringOfCommands at: 1 )= $r ifTrue: [ 
		((aStringOfCommands size = 2 and: [aStringOfCommands at: 2] )= $r) ifTrue: [self rotateRight. self rotateRight ] 
		ifFalse:[self rotateRight]	.
			].]
	
	"aStringOfCommands = 'ff' ifTrue: [position := 0@2].
	"! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 16:47:03'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 16:47:03'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 16:47:03'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 16:47:03'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 16:47:03'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 16:47:03'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 16:47:03'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 16:47:03'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'AG 5/13/2023 16:47:03'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'AG 5/13/2023 16:47:03'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 16:47:03'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'AG 5/13/2023 16:47:03'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'AG 5/13/2023 16:47:03'!
PASSED!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 16:47:49' prior: 50606034!
commands: aStringOfCommands 
	aStringOfCommands isEmpty ifFalse:[
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [ self rotateLeft .	].
	(aStringOfCommands at: 1 )= $r ifTrue: [ 
		(aStringOfCommands size = 2 and: [(aStringOfCommands at: 2) = $r]) ifTrue: [self rotateRight. self rotateRight ] 
		ifFalse:[self rotateRight]	.
			].]
	
	"aStringOfCommands = 'ff' ifTrue: [position := 0@2].
	"! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 16:47:50'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 16:47:50'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 16:47:50'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 16:47:50'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 16:47:50'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 16:47:50'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 16:47:50'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 16:47:50'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'AG 5/13/2023 16:47:50'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'AG 5/13/2023 16:47:50'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 16:47:50'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'AG 5/13/2023 16:47:50'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'AG 5/13/2023 16:47:50'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 16:48:34' prior: 50605704!
test13

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'rrr'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Sur.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 16:48:37' prior: 50606140!
test13

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'rr'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Sur.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 16:48:51'!
test14

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'rrr'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Oeste.! !

!testRun: #MarsRoverTest #test14 stamp: 'AG 5/13/2023 16:48:52'!
FAILURE!

!testRun: #MarsRoverTest #test14 stamp: 'AG 5/13/2023 16:51:48'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 16:51:48'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 16:51:48'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 16:51:48'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 16:51:48'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 16:51:48'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 16:51:48'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 16:51:48'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 16:51:48'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'AG 5/13/2023 16:51:48'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'AG 5/13/2023 16:51:48'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 16:51:48'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'AG 5/13/2023 16:51:48'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'AG 5/13/2023 16:51:48'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'AG 5/13/2023 16:51:48'!
FAILURE!

!testRun: #MarsRoverTest #test14 stamp: 'AG 5/13/2023 16:51:48'!
FAILURE!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 16:54:27' prior: 50606087!
commands: aStringOfCommands 
	aStringOfCommands isEmpty ifFalse:[
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [ self rotateLeft .	].
	(aStringOfCommands at: 1 )= $r ifTrue: [ 
		(aStringOfCommands size = 2 and: [(aStringOfCommands at: 2) = $r]) ifTrue: [
			self rotateRight. self rotateRight ] 
		ifFalse:[
			(aStringOfCommands size = 3 and:[(aStringOfCommands  at: 3) = $r]) ifTrue:[
				self rotateRight. self rotateRight . self rotateRight 	.]ifFalse:[ 
			self rotateRight]	].
			].]
	
	"aStringOfCommands = 'ff' ifTrue: [position := 0@2].
	"! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 16:54:32'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 16:54:32'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 16:54:32'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 16:54:32'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 16:54:32'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 16:54:32'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 16:54:32'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 16:54:32'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'AG 5/13/2023 16:54:32'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'AG 5/13/2023 16:54:32'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 16:54:32'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'AG 5/13/2023 16:54:32'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'AG 5/13/2023 16:54:32'!
PASSED!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 16:57:18' prior: 50606211!
commands: aStringOfCommands 
	aStringOfCommands isEmpty ifFalse:[
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [ self rotateLeft .	].
	(aStringOfCommands at: 1 )= $r ifTrue: [ 
		(aStringOfCommands size = 2 and: [(aStringOfCommands at: 2) = $r]) ifTrue: [
			self rotateRight. self rotateRight ] 
		ifFalse:[
			(aStringOfCommands size = 3 and:[(aStringOfCommands  at: 3) = $r]) ifTrue:[
				self rotateRight. self rotateRight . self rotateRight 	.]ifFalse:[ 
			self rotateRight]	].
			].].
	
	aStringOfCommands do:[:command| command = $r ifTrue:[self rotateRight .]]
	"aStringOfCommands = 'ff' ifTrue: [position := 0@2].
	"! !
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 16:59:13' prior: 50606269!
commands: aStringOfCommands 
	aStringOfCommands isEmpty ifFalse:[
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [ self rotateLeft .	].
	(aStringOfCommands at: 1 )= $r ifTrue: [ 
		"(aStringOfCommands size = 2 and: [(aStringOfCommands at: 2) = $r]) ifTrue: [
			self rotateRight. self rotateRight ] 
		ifFalse:[
			(aStringOfCommands size = 3 and:[(aStringOfCommands  at: 3) = $r]) ifTrue:[
				self rotateRight. self rotateRight . self rotateRight 	.]ifFalse:[ 
			self rotateRight]	].
			]."
		aStringOfCommands do:[:command| command = $r ifTrue:[self rotateRight .]]
		
		].].
	! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 16:59:16'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 16:59:16'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 16:59:16'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 16:59:16'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 16:59:16'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 16:59:16'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 16:59:16'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 16:59:16'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'AG 5/13/2023 16:59:16'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'AG 5/13/2023 16:59:16'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 16:59:16'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'AG 5/13/2023 16:59:16'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'AG 5/13/2023 16:59:16'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'AG 5/13/2023 16:59:16'!
PASSED!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 16:59:24' prior: 50606295!
commands: aStringOfCommands 
	aStringOfCommands isEmpty ifFalse:[
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [ self rotateLeft .	].
	(aStringOfCommands at: 1 )= $r ifTrue: [ 
		aStringOfCommands do:[:command| command = $r ifTrue:[self rotateRight .]]
		
		].].
	! !
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 17:08:44' prior: 50606356!
commands: aStringOfCommands 
	aStringOfCommands isEmpty ifFalse:[
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [ self rotateLeft .	].
	(aStringOfCommands at: 1 )= $r ifTrue: [ 
		aStringOfCommands do:[:command| command = $r ifTrue:[self rotateRight .]]
		
		].
	self error: 'comando invalido'
	].! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 17:08:45'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 17:08:45'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 17:08:45'!
ERROR!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 17:08:45'!
ERROR!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 17:08:45'!
ERROR!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 17:08:45'!
ERROR!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 17:08:45'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 17:08:45'!
ERROR!

!testRun: #MarsRoverTest #test09 stamp: 'AG 5/13/2023 17:08:45'!
ERROR!

!testRun: #MarsRoverTest #test10 stamp: 'AG 5/13/2023 17:08:45'!
ERROR!

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 17:08:45'!
ERROR!

!testRun: #MarsRoverTest #test12 stamp: 'AG 5/13/2023 17:08:45'!
ERROR!

!testRun: #MarsRoverTest #test13 stamp: 'AG 5/13/2023 17:08:45'!
ERROR!

!testRun: #MarsRoverTest #test14 stamp: 'AG 5/13/2023 17:08:45'!
ERROR!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 17:09:03' prior: 50606370!
commands: aStringOfCommands 
	aStringOfCommands isEmpty ifFalse:[
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [ self rotateLeft .	].
	(aStringOfCommands at: 1 )= $r ifTrue: [ 
		aStringOfCommands do:[:command| command = $r ifTrue:[self rotateRight .]]
		
		].	].! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 17:09:06'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 17:09:06'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 17:09:06'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 17:09:06'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 17:09:06'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 17:09:06'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 17:09:06'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 17:09:06'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'AG 5/13/2023 17:09:06'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'AG 5/13/2023 17:09:06'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 17:09:06'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'AG 5/13/2023 17:09:06'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'AG 5/13/2023 17:09:06'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'AG 5/13/2023 17:09:06'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 17:10:55'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 17:10:55'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 17:10:55'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 17:10:55'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'AG 5/13/2023 17:10:55'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 17:10:55'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 17:10:55'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 17:10:55'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'AG 5/13/2023 17:10:55'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'AG 5/13/2023 17:10:55'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'AG 5/13/2023 17:10:55'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'AG 5/13/2023 17:10:55'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'AG 5/13/2023 17:10:55'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'AG 5/13/2023 17:10:55'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 17:24:08'!
test09CommandRightRotateFromEsteDirectionShouldChangeToSur

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Este.
	
	rover commands: 'r'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Sur.! !

!methodRemoval: MarsRoverTest #test09 stamp: 'AG 5/13/2023 17:24:08'!
test09

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Este.
	
	rover commands: 'r'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Sur.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 17:24:17'!
test10CommandRightRotateFromSurDirectionShouldChangeToOeste

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Sur.
	
	rover commands: 'r'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Oeste.! !

!methodRemoval: MarsRoverTest #test10 stamp: 'AG 5/13/2023 17:24:17'!
test10

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Sur.
	
	rover commands: 'r'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Oeste.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 17:24:36'!
test11CommandRightRotateFromOesteDirectionShouldChangeToNorte

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'r'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Norte.! !

!methodRemoval: MarsRoverTest #test11 stamp: 'AG 5/13/2023 17:24:36'!
test11

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'r'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Norte.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 17:24:50'!
test12CommandRightRotateFromNorteDirectionShouldChangeToEste

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'r'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Este.! !

!methodRemoval: MarsRoverTest #test12 stamp: 'AG 5/13/2023 17:24:50'!
test12

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'r'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Este.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 17:25:48'!
test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'l'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Oeste.! !

!methodRemoval: MarsRoverTest #test05 stamp: 'AG 5/13/2023 17:25:48'!
test05

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'l'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Oeste.!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 17:25:58'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 17:25:58'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 17:25:58'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 17:25:58'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 17:25:58'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 17:25:58'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'AG 5/13/2023 17:25:58'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'AG 5/13/2023 17:25:58'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'AG 5/13/2023 17:25:58'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 17:25:58'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 17:25:58'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 17:25:58'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/13/2023 17:25:58'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'AG 5/13/2023 17:25:58'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'AG 5/13/2023 17:25:58'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 17:26:15'!
test06CommandLeftRotateFromSurDirectionShouldChangeToEste

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Sur.
	
	rover commands: 'l'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Este.! !

!methodRemoval: MarsRoverTest #test06 stamp: 'AG 5/13/2023 17:26:15'!
test06

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Sur.
	
	rover commands: 'l'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Este.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 17:26:30'!
test07CommandLeftRotateFromOesteDirectionShouldChangeToSur

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'l'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Sur.! !

!methodRemoval: MarsRoverTest #test07 stamp: 'AG 5/13/2023 17:26:30'!
test07

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'l'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Sur.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 17:26:42'!
test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Este.
	
	rover commands: 'l'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Norte.! !

!methodRemoval: MarsRoverTest #test08 stamp: 'AG 5/13/2023 17:26:42'!
test08

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Este.
	
	rover commands: 'l'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Norte.!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 17:26:46'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 17:26:46'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 17:26:46'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 17:26:46'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 17:26:46'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 17:26:46'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/13/2023 17:26:46'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 17:26:46'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 17:26:46'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 17:26:46'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 17:26:46'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 17:26:46'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/13/2023 17:26:46'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'AG 5/13/2023 17:26:46'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'AG 5/13/2023 17:26:46'!
PASSED!

----SNAPSHOT----(13 May 2023 17:26:49) CuisUniversity-5706.image priorSource: 8768634!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 17:28:47'!
test13CommandDoubleRightShouldRotateRightTwice

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'rr'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Sur.! !

!methodRemoval: MarsRoverTest #test13 stamp: 'AG 5/13/2023 17:28:47'!
test13

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'rr'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Sur.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 17:29:39'!
test13TwoCommandRightShouldRotateRightTwice

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'rr'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Sur.! !

!methodRemoval: MarsRoverTest #test13CommandDoubleRightShouldRotateRightTwice stamp: 'AG 5/13/2023 17:29:39'!
test13CommandDoubleRightShouldRotateRightTwice

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'rr'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Sur.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 17:30:26'!
test14ManyCommandRightShouldRotateRightManyTimes

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'rrr'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Oeste.! !

!methodRemoval: MarsRoverTest #test14 stamp: 'AG 5/13/2023 17:30:26'!
test14

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'rrr'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Oeste.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 17:31:35'!
test14ManyCommandsRightShouldRotateRightManyTimes

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'rrr'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Oeste.! !

!methodRemoval: MarsRoverTest #test14ManyCommandRightShouldRotateRightManyTimes stamp: 'AG 5/13/2023 17:31:35'!
test14ManyCommandRightShouldRotateRightManyTimes

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'rrr'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Oeste.!

!methodRemoval: MarsRoverTest #_test08TwoForwardCommandsChangesPositionTwice stamp: 'AG 5/13/2023 17:31:43'!
_test08TwoForwardCommandsChangesPositionTwice

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'ff'.
	
	self assert: rover position equals: 0@2.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 17:40:00'!
assertRoverRotatesRightFrom: aDirection to: aDirectionToRotate
	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: aDirection.
	
	rover commands: 'r'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: aDirectionToRotate.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 17:40:25'!
assertRoverRotatesLeftFrom: aDirection to: aDirectionToRotate
	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: aDirection.
	
	rover commands: 'l'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: aDirectionToRotate.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 17:40:40' prior: 50606857!
assertRoverRotatesLeftFrom: anInitialDirection to: aDirectionToRotate
	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: anInitialDirection.
	
	rover commands: 'l'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: aDirectionToRotate.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 17:41:43' prior: 50606583!
test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste

	self assertRoverRotatesLeftFrom: #Norte to: #Oeste. ! !

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 17:41:43'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 17:41:43'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 17:41:43'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 17:41:43'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 17:41:43'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 17:41:43'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/13/2023 17:41:43'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 17:41:43'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 17:41:43'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 17:41:44'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 17:41:44'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 17:41:44'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/13/2023 17:41:44'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/13/2023 17:41:44'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/13/2023 17:41:44'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 17:42:12' prior: 50606649!
test06CommandLeftRotateFromSurDirectionShouldChangeToEste

	self assertRoverRotatesLeftFrom: #Sur to: #Este.! !

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/13/2023 17:42:13'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 17:42:13'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 17:42:13'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 17:42:13'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 17:42:13'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 17:42:13'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/13/2023 17:42:13'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 17:42:13'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 17:42:13'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 17:42:13'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 17:42:13'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 17:42:13'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/13/2023 17:42:13'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/13/2023 17:42:13'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/13/2023 17:42:13'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 17:42:29' prior: 50606667!
test07CommandLeftRotateFromOesteDirectionShouldChangeToSur

	self assertRoverRotatesLeftFrom: #Oeste to: #Sur.! !

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 17:42:30'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 17:42:30'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 17:42:30'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 17:42:30'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 17:42:30'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 17:42:30'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/13/2023 17:42:30'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 17:42:30'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 17:42:30'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 17:42:30'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 17:42:30'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 17:42:30'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/13/2023 17:42:30'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/13/2023 17:42:30'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/13/2023 17:42:30'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 17:42:50' prior: 50606685!
test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte

	self assertRoverRotatesLeftFrom: #Este to: #Norte.! !

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 17:42:52'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 17:42:52'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 17:42:52'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 17:42:52'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 17:42:52'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 17:42:52'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/13/2023 17:42:52'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 17:42:52'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 17:42:52'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 17:42:52'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 17:42:52'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 17:42:52'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/13/2023 17:42:52'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/13/2023 17:42:52'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/13/2023 17:42:52'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 17:43:23' prior: 50606510!
test09CommandRightRotateFromEsteDirectionShouldChangeToSur

	self assertRoverRotatesRightFrom: #Este to: #Sur. ! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 17:43:42' prior: 50606528!
test10CommandRightRotateFromSurDirectionShouldChangeToOeste

	self assertRoverRotatesRightFrom: #Sur to: #Oeste. ! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 17:43:57' prior: 50606546!
test11CommandRightRotateFromOesteDirectionShouldChangeToNorte

	self assertRoverRotatesRightFrom: #Oeste to: #Norte. ! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/13/2023 17:44:14' prior: 50606565!
test12CommandRightRotateFromNorteDirectionShouldChangeToEste

		self assertRoverRotatesRightFrom: #Norte to: #Este. ! !

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/13/2023 17:44:20'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 17:44:25'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 17:44:25'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 17:44:25'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 17:44:25'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 17:44:25'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/13/2023 17:44:25'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 17:44:25'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 17:44:25'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 17:44:25'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 17:44:25'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 17:44:25'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/13/2023 17:44:25'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/13/2023 17:44:25'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/13/2023 17:44:25'!
PASSED!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 17:49:51' prior: 50605642!
rotateRight

	 direction =#Este ifTrue: [direction := #Sur]
			ifFalse:[ 
				direction = #Sur ifTrue:[direction := #Oeste]
					ifFalse:[
						direction = #Oeste ifTrue:[direction := #Norte]
							ifFalse:[direction := #Este]
							]
			]! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 17:49:52'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 17:49:52'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 17:49:52'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 17:49:52'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 17:49:52'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/13/2023 17:49:52'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 17:49:52'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 17:49:52'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 17:49:52'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 17:49:52'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 17:49:52'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/13/2023 17:49:52'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/13/2023 17:49:52'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/13/2023 17:49:52'!
PASSED!

----SNAPSHOT----(13 May 2023 17:53:35) CuisUniversity-5706.image priorSource: 8803424!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 17:53:40' prior: 50605069!
rotateLeft



		(direction = #Norte) ifTrue:[direction := #Oeste]
			ifFalse:[
				(direction = #Sur) ifTrue:[direction := #Este]
				ifFalse: [
					(direction = #Oeste) ifTrue:[direction := #Sur]
					ifFalse:[
						(direction = #Este) ifTrue: [direction := #Norte] 
						ifFalse:[
							self error:'error'
							] 
						]
					]
				].
		! !

----SNAPSHOT----(13 May 2023 17:53:44) CuisUniversity-5706.image priorSource: 8820141!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 17:53:50'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 17:53:50'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 17:53:50'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 17:53:50'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 17:53:50'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/13/2023 17:53:50'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 17:53:50'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 17:53:50'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 17:53:50'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 17:53:50'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 17:53:50'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/13/2023 17:53:50'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/13/2023 17:53:50'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/13/2023 17:53:50'!
PASSED!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 18:01:35' prior: 50607283!
rotateLeft

		(direction = #Norte) ifTrue:[direction := #Oeste]
			ifFalse:[
				(direction = #Sur) ifTrue:[direction := #Este]
				ifFalse: [
					(direction = #Oeste) ifTrue:[direction := #Sur]
					ifFalse:[
						(direction = #Este) ifTrue: [direction := #Norte] 
						ifFalse:[
							self error:'error'
							] 
						]
					]
				].
		! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 18:01:36'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 18:01:36'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 18:01:36'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 18:01:36'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:01:36'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:01:36'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:01:36'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:01:36'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:01:36'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:01:36'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:01:36'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:01:36'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/13/2023 18:01:37'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/13/2023 18:01:37'!
PASSED!

Object subclass: #MarsRoverState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

!classDefinition: #MarsRoverState category: 'MarsRoverExersice' stamp: 'AG 5/13/2023 18:23:05'!
Object subclass: #MarsRoverState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

MarsRoverState subclass: #MarsRoverNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

!classDefinition: #MarsRoverNorth category: 'MarsRoverExersice' stamp: 'AG 5/13/2023 18:23:29'!
MarsRoverState subclass: #MarsRoverNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

MarsRoverState subclass: #MarsRoverSur
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

!classDefinition: #MarsRoverSur category: 'MarsRoverExersice' stamp: 'AG 5/13/2023 18:23:39'!
MarsRoverState subclass: #MarsRoverSur
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

MarsRoverState subclass: #MarsRoverEste
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

!classDefinition: #MarsRoverEste category: 'MarsRoverExersice' stamp: 'AG 5/13/2023 18:23:42'!
MarsRoverState subclass: #MarsRoverEste
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

MarsRoverState subclass: #MarsRoverOeste
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

!classDefinition: #MarsRoverOeste category: 'MarsRoverExersice' stamp: 'AG 5/13/2023 18:23:45'!
MarsRoverState subclass: #MarsRoverOeste
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

MarsRoverState subclass: #MarsRoverNorte
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

!classDefinition: #MarsRoverNorte category: 'MarsRoverExersice' stamp: 'AG 5/13/2023 18:23:53'!
MarsRoverState subclass: #MarsRoverNorte
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

!classRemoval: #MarsRoverNorth stamp: 'AG 5/13/2023 18:24:00'!
MarsRoverState subclass: #MarsRoverNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

!classDefinition: #MarsRover category: 'MarsRoverExersice' stamp: 'AG 5/13/2023 18:26:16'!
Object subclass: #MarsRover
	instanceVariableNames: 'initialPosition initialDirection position direction state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 18:26:14' prior: 50607353!
rotateLeft
	
	state rotateMarsRoverLeft: self."

		(direction = #Norte) ifTrue:[direction := #Oeste]
			ifFalse:[
				(direction = #Sur) ifTrue:[direction := #Este]
				ifFalse: [
					(direction = #Oeste) ifTrue:[direction := #Sur]
					ifFalse:[
						(direction = #Este) ifTrue: [direction := #Norte] 
						ifFalse:[
							self error:'error'
							] 
						]
					]
				].
		"! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 18:26:23'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 18:26:23'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 18:26:23'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 18:26:23'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:26:23'!
ERROR!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:26:23'!
ERROR!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:26:23'!
ERROR!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:26:23'!
ERROR!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:26:23'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:26:23'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:26:23'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:26:23'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/13/2023 18:26:23'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/13/2023 18:26:23'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:26:27'!
ERROR!
!UndefinedObject methodsFor: 'as yet unclassified' stamp: 'AG 5/13/2023 18:26:46'!
rotateMarsRoverLeft: aMarsRover 
	self shouldBeImplemented.! !

Object subclass: #MarsRover
	instanceVariableNames: 'initialPosition initialDirection position direction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

!classDefinition: #MarsRover category: 'MarsRoverExersice' stamp: 'AG 5/13/2023 18:27:16'!
Object subclass: #MarsRover
	instanceVariableNames: 'initialPosition initialDirection position direction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

!classDefinition: #MarsRover category: 'MarsRoverExersice' stamp: 'AG 5/13/2023 18:27:22'!
Object subclass: #MarsRover
	instanceVariableNames: 'initialPosition initialDirection position state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/13/2023 18:27:22' prior: 50604653!
initializeInPosition: anInitialPosition atDirection: aInitialDirection 
	
	position := anInitialPosition .
	state := aInitialDirection .! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/13/2023 18:27:22' prior: 50607217!
rotateRight

	 state =#Este ifTrue: [state := #Sur]
			ifFalse:[ 
				state = #Sur ifTrue:[state := #Oeste]
					ifFalse:[
						state = #Oeste ifTrue:[state := #Norte]
							ifFalse:[state := #Este]
							]
			]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/13/2023 18:27:22' prior: 50604589!
direction
	^state.! !
!MarsRover methodsFor: 'initialization' stamp: 'AG 5/13/2023 18:27:44' prior: 50607607!
initializeInPosition: anInitialPosition atDirection: aInitialDirection 
	
	position := anInitialPosition .
	state := MarsRoverState at: aInitialDirection .! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 18:27:45'!
ERROR!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 18:27:45'!
ERROR!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 18:27:45'!
ERROR!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 18:27:45'!
ERROR!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:27:45'!
ERROR!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:27:45'!
ERROR!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:27:45'!
ERROR!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:27:45'!
ERROR!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:27:45'!
ERROR!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:27:45'!
ERROR!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:27:45'!
ERROR!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:27:45'!
ERROR!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/13/2023 18:27:45'!
ERROR!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/13/2023 18:27:45'!
ERROR!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 18:27:47'!
ERROR!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 18:27:56'!
ERROR!
!MarsRover methodsFor: 'initialization' stamp: 'AG 5/13/2023 18:31:16' prior: 50607629!
initializeInPosition: anInitialPosition atDirection: aInitialDirection 
	
	position := anInitialPosition .
	state := MarsRoverState with: aInitialDirection .! !
!MarsRoverState class methodsFor: 'no messages' stamp: 'AG 5/13/2023 18:33:38'!
stateFor: aDirection
	^(self subclasses detect: [:aStackStateClass | aStackStateClass canHandle: aDirection ]) for: aDirection.
	! !
!MarsRoverState class methodsFor: 'as yet unclassified' stamp: 'AG 5/13/2023 18:34:00' prior: 50607704!
stateFor: aDirection
	^(self subclasses detect: [:aMarsRoverStateClass | aMarsRoverStateClass canHandle: aDirection ]) for: aDirection.
	! !
!MarsRoverState class methodsFor: 'as yet unclassified' stamp: 'AG 5/13/2023 18:34:39'!
canHandle: aDirection
	self subclassResponsibility .! !
!MarsRoverState class methodsFor: 'as yet unclassified' stamp: 'AG 5/13/2023 18:35:08'!
for: aDirection

	^self new initializeFor: aDirection! !
!MarsRoverEste class methodsFor: 'no messages' stamp: 'AG 5/13/2023 18:35:44' overrides: 50607720!
canHandle: aDirection

	^aDirection = #Este.! !
!MarsRoverNorte class methodsFor: 'no messages' stamp: 'AG 5/13/2023 18:35:55' overrides: 50607720!
canHandle: aDirection

	^aDirection = #Norte.! !
!MarsRoverOeste class methodsFor: 'no messages' stamp: 'AG 5/13/2023 18:36:05' overrides: 50607720!
canHandle: aDirection

	^aDirection = #Oeste.! !
!MarsRoverSur class methodsFor: 'no messages' stamp: 'AG 5/13/2023 18:36:13' overrides: 50607720!
canHandle: aDirection

	^aDirection = #Sur.! !
!MarsRover methodsFor: 'initialization' stamp: 'AG 5/13/2023 18:37:09' prior: 50607696!
initializeInPosition: anInitialPosition atDirection: aInitialDirection 
	
	position := anInitialPosition .
	state := MarsRoverState stateFor: aInitialDirection .! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 18:37:23'!
ERROR!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 18:37:23'!
ERROR!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 18:37:23'!
ERROR!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 18:37:23'!
ERROR!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:37:23'!
ERROR!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:37:23'!
ERROR!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:37:23'!
ERROR!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:37:23'!
ERROR!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:37:23'!
ERROR!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:37:23'!
ERROR!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:37:23'!
ERROR!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:37:23'!
ERROR!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/13/2023 18:37:23'!
ERROR!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/13/2023 18:37:23'!
ERROR!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 18:37:42'!
ERROR!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 18:37:42'!
ERROR!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 18:37:42'!
ERROR!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 18:37:42'!
ERROR!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:37:42'!
ERROR!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:37:42'!
ERROR!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:37:42'!
ERROR!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:37:42'!
ERROR!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:37:42'!
ERROR!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:37:42'!
ERROR!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:37:42'!
ERROR!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:37:42'!
ERROR!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/13/2023 18:37:42'!
ERROR!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/13/2023 18:37:42'!
ERROR!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 18:37:46'!
ERROR!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/13/2023 18:39:57' prior: 50607625!
direction
	^state direction.! !
!MarsRoverState methodsFor: 'no messages' stamp: 'AG 5/13/2023 18:40:09'!
direction
	self subclassResponsibility .! !
!MarsRoverState class methodsFor: 'as yet unclassified' stamp: 'AG 5/13/2023 18:40:31' prior: 50607725!
for: aDirection

	^self new initialize! !
!MarsRoverState class methodsFor: 'as yet unclassified' stamp: 'AG 5/13/2023 18:40:52' prior: 50607712!
stateFor: aDirection
	^(self subclasses detect: [:aMarsRoverStateClass | aMarsRoverStateClass canHandle: aDirection ]) new.
	! !

!methodRemoval: MarsRoverState class #for: stamp: 'AG 5/13/2023 18:40:57'!
for: aDirection

	^self new initialize!
!MarsRoverEste methodsFor: 'no messages' stamp: 'AG 5/13/2023 18:41:27' overrides: 50607871!
direction
	^#Este.! !
!MarsRoverNorte methodsFor: 'no messages' stamp: 'AG 5/13/2023 18:42:01' overrides: 50607871!
direction
	^#Norte.! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 18:42:09'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 18:42:12'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 18:42:12'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 18:42:12'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 18:42:12'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 18:42:12'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:42:12'!
ERROR!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:42:13'!
ERROR!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:42:13'!
ERROR!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:42:13'!
ERROR!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:42:13'!
ERROR!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:42:13'!
ERROR!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:42:13'!
ERROR!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:42:13'!
ERROR!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/13/2023 18:42:13'!
ERROR!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/13/2023 18:42:13'!
ERROR!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 18:42:21'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 18:42:27'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 18:42:27'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 18:42:27'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 18:42:27'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:42:27'!
ERROR!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:42:27'!
ERROR!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:42:27'!
ERROR!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:42:27'!
ERROR!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:42:27'!
ERROR!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:42:27'!
ERROR!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:42:27'!
ERROR!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:42:27'!
ERROR!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/13/2023 18:42:27'!
ERROR!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/13/2023 18:42:27'!
ERROR!
!MarsRoverOeste methodsFor: 'no messages' stamp: 'AG 5/13/2023 18:42:48' overrides: 50607871!
direction
	^#Oeste! !
!MarsRoverSur methodsFor: 'no messages' stamp: 'AG 5/13/2023 18:43:00' overrides: 50607871!
direction
	^#Sur.! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 18:43:05'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 18:43:05'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 18:43:05'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 18:43:05'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:43:05'!
ERROR!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:43:05'!
ERROR!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:43:05'!
ERROR!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:43:05'!
ERROR!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:43:05'!
ERROR!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:43:05'!
ERROR!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:43:06'!
ERROR!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:43:06'!
ERROR!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/13/2023 18:43:06'!
ERROR!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/13/2023 18:43:06'!
ERROR!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 18:44:01'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 18:44:01'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 18:44:01'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 18:44:01'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:44:01'!
ERROR!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:44:01'!
ERROR!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:44:01'!
ERROR!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:44:01'!
ERROR!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:44:01'!
ERROR!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:44:01'!
ERROR!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:44:01'!
ERROR!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:44:01'!
ERROR!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/13/2023 18:44:01'!
ERROR!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/13/2023 18:44:01'!
ERROR!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:44:04'!
ERROR!

!methodRemoval: UndefinedObject #rotateMarsRoverLeft: stamp: 'AG 5/13/2023 18:44:19'!
rotateMarsRoverLeft: aMarsRover 
	self shouldBeImplemented.!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:44:21'!
FAILURE!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 18:44:27'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 18:44:27'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 18:44:27'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 18:44:27'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:44:27'!
ERROR!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:44:27'!
ERROR!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:44:27'!
ERROR!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:44:27'!
ERROR!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:44:27'!
ERROR!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:44:27'!
ERROR!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:44:27'!
ERROR!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:44:27'!
ERROR!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/13/2023 18:44:27'!
ERROR!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/13/2023 18:44:27'!
ERROR!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:44:28'!
ERROR!
!MarsRoverState methodsFor: 'as yet unclassified' stamp: 'AG 5/13/2023 18:45:06'!
rotateMarsRoverLeft: aMarsRover
	self subclassResponsibility .! !
!MarsRoverSur methodsFor: 'as yet unclassified' stamp: 'AG 5/13/2023 18:45:20' overrides: 50608198!
rotateMarsRoverLeft: aMarsRover
	self subclassResponsibility .! !
!MarsRoverEste methodsFor: 'as yet unclassified' stamp: 'AG 5/13/2023 18:45:20' overrides: 50608198!
rotateMarsRoverLeft: aMarsRover
	self subclassResponsibility .! !
!MarsRoverOeste methodsFor: 'as yet unclassified' stamp: 'AG 5/13/2023 18:45:20' overrides: 50608198!
rotateMarsRoverLeft: aMarsRover
	self subclassResponsibility .! !
!MarsRoverNorte methodsFor: 'as yet unclassified' stamp: 'AG 5/13/2023 18:45:20' overrides: 50608198!
rotateMarsRoverLeft: aMarsRover
	self subclassResponsibility .! !

!methodRemoval: MarsRoverState #rotateMarsRoverLeft: stamp: 'AG 5/13/2023 18:45:20'!
rotateMarsRoverLeft: aMarsRover
	self subclassResponsibility .!
!MarsRoverEste methodsFor: 'as yet unclassified' stamp: 'AG 5/13/2023 18:46:12' prior: 50608210!
rotateMarsRoverLeft: aMarsRover
	^aMarsRover rotateLeftFromEste.! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 18:46:21'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 18:46:21'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 18:46:21'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 18:46:21'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:46:21'!
ERROR!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:46:21'!
ERROR!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:46:21'!
ERROR!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:46:21'!
ERROR!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:46:21'!
ERROR!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:46:21'!
ERROR!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:46:21'!
ERROR!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:46:21'!
ERROR!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/13/2023 18:46:21'!
ERROR!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/13/2023 18:46:21'!
ERROR!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:46:24'!
ERROR!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 18:47:17'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 18:47:17'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 18:47:17'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 18:47:17'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:47:17'!
ERROR!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:47:17'!
ERROR!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:47:17'!
ERROR!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:47:17'!
ERROR!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:47:17'!
ERROR!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:47:17'!
ERROR!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:47:17'!
ERROR!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:47:17'!
ERROR!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/13/2023 18:47:17'!
ERROR!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/13/2023 18:47:17'!
ERROR!

rover := MarsRover inPosition: 0@0 atDirection: #Norte. !

rover := MarsRover inPosition: 0@0 atDirection: #Norte. !

rover!

rover!

|rover|

rover := MarsRover inPosition: 0@0 atDirection: #Este. 
rover!

rover!

|rover|

rover := MarsRover inPosition: 0@0 atDirection: #Este. 
rover !

rover!

rover := MarsRover inPosition: 0@0 atDirection: #Este. !

rover := MarsRover inPosition: 0@0 atDirection: #Este. !

rover := MarsRover inPosition: 0@0 atDirection: #Este!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 18:52:15'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 18:52:15'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 18:52:15'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 18:52:15'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:52:15'!
ERROR!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:52:15'!
ERROR!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:52:15'!
ERROR!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:52:15'!
ERROR!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:52:15'!
ERROR!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:52:15'!
ERROR!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:52:15'!
ERROR!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:52:15'!
ERROR!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/13/2023 18:52:15'!
ERROR!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/13/2023 18:52:15'!
ERROR!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:52:25'!
ERROR!
!MarsRover methodsFor: 'nil' stamp: 'AG 5/13/2023 18:54:18'!
rotateLeftFromEste

	state := MarsRoverState stateFor: #Norte.! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 18:54:39'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 18:54:39'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 18:54:39'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 18:54:39'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:54:39'!
ERROR!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:54:39'!
ERROR!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:54:39'!
ERROR!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:54:39'!
ERROR!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:54:39'!
ERROR!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:54:39'!
ERROR!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:54:39'!
ERROR!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:54:39'!
ERROR!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/13/2023 18:54:39'!
ERROR!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/13/2023 18:54:39'!
ERROR!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:54:48'!
ERROR!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 18:57:14'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 18:57:14'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 18:57:14'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 18:57:14'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:57:14'!
ERROR!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:57:14'!
ERROR!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:57:14'!
ERROR!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:57:14'!
ERROR!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:57:14'!
ERROR!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:57:14'!
ERROR!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:57:14'!
ERROR!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:57:14'!
ERROR!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/13/2023 18:57:14'!
ERROR!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/13/2023 18:57:14'!
ERROR!

----SNAPSHOT----(13 May 2023 18:57:27) CuisUniversity-5706.image priorSource: 8820669!

----STARTUP---- (13 May 2023 18:57:37) as C:\Users\Usuario\Desktop\Exactas\Inge1\cuis3\windows64\CuisUniversity-5706.image!


!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/13/2023 18:57:46'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/13/2023 18:57:46'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/13/2023 18:57:46'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/13/2023 18:57:46'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:57:46'!
ERROR!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:57:46'!
ERROR!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:57:46'!
ERROR!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:57:46'!
ERROR!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/13/2023 18:57:46'!
ERROR!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/13/2023 18:57:46'!
ERROR!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/13/2023 18:57:46'!
ERROR!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/13/2023 18:57:46'!
ERROR!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/13/2023 18:57:47'!
ERROR!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/13/2023 18:57:47'!
ERROR!

----STARTUP---- (14 May 2023 10:35:12) as C:\Users\Usuario\Desktop\Exactas\Inge1\cuis3\windows64\CuisUniversity-5706.image!


!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 10:35:35'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 10:35:35'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 10:35:35'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 10:35:35'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:35:35'!
ERROR!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:35:35'!
ERROR!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:35:35'!
ERROR!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:35:35'!
ERROR!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:35:35'!
ERROR!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:35:35'!
ERROR!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:35:35'!
ERROR!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:35:35'!
ERROR!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 10:35:35'!
ERROR!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 10:35:35'!
ERROR!

----STARTUP---- (14 May 2023 10:35:46) as C:\Users\Usuario\Desktop\Exactas\Inge1\cuis3\windows64\CuisUniversity-5706.image!


----End fileIn of C:\Users\Usuario\Desktop\Exactas\Inge1\cuis3\windows64\MarsRoverExersice.st----!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 10:36:09'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 10:36:09'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 10:36:09'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 10:36:09'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:36:09'!
ERROR!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:36:09'!
ERROR!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:36:09'!
ERROR!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:36:09'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:36:09'!
ERROR!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:36:09'!
ERROR!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:36:09'!
ERROR!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:36:09'!
ERROR!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 10:36:09'!
ERROR!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 10:36:09'!
ERROR!
!MarsRoverNorte methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 10:37:37' prior: 50608980!
rotateMarsRoverLeft: aMarsRover
	^aMarsRover rotateLeftFromNorte.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 10:38:28'!
rotateLeftFromNorte
	
	state := MarsRoverState stateFor: #Oeste.! !
!MarsRoverOeste methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 10:38:55' prior: 50609017!
rotateMarsRoverLeft: aMarsRover
	aMarsRover rotateLeftFromOeste! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 10:39:17'!
rotateLeftFromOeste
	
	state := MarsRoverState stateFor: #Sur.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 10:39:31'!
rotateLeftFromSur
	
	state := MarsRoverState stateFor: #Este.! !
!MarsRoverSur methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 10:39:48' prior: 50609054!
rotateMarsRoverLeft: aMarsRover
	aMarsRover rotateLeftFromSur ! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 10:39:54'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 10:39:54'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 10:39:54'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 10:39:54'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:39:54'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:39:54'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:39:54'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:39:54'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:39:54'!
ERROR!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:39:54'!
ERROR!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:39:54'!
ERROR!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:39:54'!
ERROR!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 10:39:54'!
ERROR!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 10:39:54'!
ERROR!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 10:40:02'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 10:40:02'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 10:40:02'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 10:40:02'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:40:02'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:40:03'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:40:03'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:40:03'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:40:03'!
ERROR!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:40:03'!
ERROR!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:40:03'!
ERROR!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:40:03'!
ERROR!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 10:40:03'!
ERROR!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 10:40:03'!
ERROR!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:40:04'!
ERROR!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 10:42:49'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 10:42:49'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 10:42:49'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 10:42:49'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:42:49'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:42:49'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:42:49'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:42:50'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:42:50'!
ERROR!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:42:50'!
ERROR!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:42:50'!
ERROR!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:42:50'!
ERROR!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 10:42:50'!
ERROR!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 10:42:50'!
ERROR!
!MarsRoverState methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 10:43:36'!
rotateRight: aMarsRover
	self subclassResponsibility .! !
!MarsRoverState methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 10:43:50'!
rotateMarsRoverRight: aMarsRover
	self subclassResponsibility .! !

!methodRemoval: MarsRoverState #rotateRight: stamp: 'AG 5/14/2023 10:43:50'!
rotateRight: aMarsRover
	self subclassResponsibility .!
!MarsRoverSur methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 10:43:58' overrides: 50609328!
rotateMarsRoverRight: aMarsRover
	self subclassResponsibility .! !
!MarsRoverEste methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 10:43:58' overrides: 50609328!
rotateMarsRoverRight: aMarsRover
	self subclassResponsibility .! !
!MarsRoverOeste methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 10:43:58' overrides: 50609328!
rotateMarsRoverRight: aMarsRover
	self subclassResponsibility .! !
!MarsRoverNorte methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 10:43:58' overrides: 50609328!
rotateMarsRoverRight: aMarsRover
	self subclassResponsibility .! !

!methodRemoval: MarsRoverState #rotateMarsRoverRight: stamp: 'AG 5/14/2023 10:43:58'!
rotateMarsRoverRight: aMarsRover
	self subclassResponsibility .!
!MarsRoverEste methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 10:44:21' prior: 50609344!
rotateMarsRoverRight: aMarsRover
	^aMarsRover rotateRightFromEste.! !
!MarsRoverNorte methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 10:44:36' prior: 50609356!
rotateMarsRoverRight: aMarsRover
	^aMarsRover rotateRightFromNorte.! !
!MarsRoverOeste methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 10:44:54' prior: 50609350!
rotateMarsRoverRight: aMarsRover
	^aMarsRover rotateRightFromOeste.! !
!MarsRoverSur methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 10:45:13' prior: 50609338!
rotateMarsRoverRight: aMarsRover
	aMarsRover rotateRightFromSur.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 10:45:33'!
rotateRightFromEste

	state := MarsRoverState stateFor: #Sur.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 10:45:44'!
rotateRightFromNorte

	state := MarsRoverState stateFor: #Este.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 10:45:57'!
rotateRightFromOeste

	state := MarsRoverState stateFor: #Norte.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 10:46:10'!
rotateRightFromSur

	state := MarsRoverState stateFor: #Oeste.! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 10:46:12'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 10:46:12'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 10:46:12'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 10:46:12'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:46:12'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:46:13'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:46:13'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:46:13'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:46:13'!
ERROR!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:46:13'!
ERROR!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:46:13'!
ERROR!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:46:13'!
ERROR!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 10:46:13'!
ERROR!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 10:46:13'!
ERROR!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/14/2023 10:46:55' prior: 50608858!
rotateRight
	state rotateMarsRoverRight: self.
"
	 state =#Este ifTrue: [state := #Sur]
			ifFalse:[ 
				state = #Sur ifTrue:[state := #Oeste]
					ifFalse:[
						state = #Oeste ifTrue:[state := #Norte]
							ifFalse:[state := #Este]
							]
			]"! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 10:46:58'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 10:46:58'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 10:46:58'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 10:46:58'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:46:58'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:46:58'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:46:58'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:46:58'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:46:58'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:46:58'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:46:58'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:46:58'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 10:46:58'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 10:46:58'!
PASSED!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/14/2023 10:47:15' prior: 50609462!
rotateRight
	state rotateMarsRoverRight: self.
! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 10:47:38'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 10:47:38'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 10:47:38'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 10:47:38'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:47:38'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:47:38'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:47:38'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:47:38'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:47:38'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:47:38'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:47:38'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:47:38'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 10:47:38'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 10:47:38'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 10:47:50'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 10:47:50'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 10:47:50'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 10:47:51'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 10:47:51'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:47:51'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:47:51'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:47:51'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:47:51'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:47:51'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:47:51'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:47:51'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:47:51'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 10:47:51'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 10:47:51'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 10:47:55'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 10:47:55'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 10:47:55'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 10:47:55'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 10:47:55'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:47:55'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:47:55'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:47:55'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:47:55'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:47:55'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:47:55'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:47:55'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:47:55'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 10:47:55'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 10:47:55'!
PASSED!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/14/2023 10:52:23' prior: 50608821!
commands: aStringOfCommands 
	aStringOfCommands isEmpty ifFalse:[
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	"aStringOfCommands = 'l' ifTrue: [ self rotateLeft .	]."
		(aStringOfCommands at: 1 )= $l ifTrue: [ 
		aStringOfCommands do:[:command| command = $l ifTrue:[self rotateLeft .]]
		
		].	
	(aStringOfCommands at: 1 )= $r ifTrue: [ 
		aStringOfCommands do:[:command| command = $r ifTrue:[self rotateRight .]]
		
		].	]! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 10:52:24'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 10:52:24'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 10:52:24'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 10:52:24'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:52:24'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:52:24'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:52:24'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:52:25'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:52:25'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:52:25'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:52:25'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:52:25'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 10:52:25'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 10:52:25'!
PASSED!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/14/2023 10:52:33' prior: 50609696!
commands: aStringOfCommands 
	aStringOfCommands isEmpty ifFalse:[
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	aStringOfCommands = 'l' ifTrue: [ self rotateLeft .	].

	(aStringOfCommands at: 1 )= $r ifTrue: [ 
		aStringOfCommands do:[:command| command = $r ifTrue:[self rotateRight .]]
		
		].	]! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/14/2023 10:52:57'!
test14ManyCommandsLeftShouldRotateLeftManyTimes

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'lll'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Oeste.! !

!testRun: #MarsRoverTest #test14ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/14/2023 10:52:58'!
FAILURE!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/14/2023 10:53:29' prior: 50609767!
commands: aStringOfCommands 
	aStringOfCommands isEmpty ifFalse:[
	aStringOfCommands = 'f' ifTrue: [position := 0@1].
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	(aStringOfCommands at: 1 )= $l ifTrue: [ 
		aStringOfCommands do:[:command| command = $l ifTrue:[self rotateLeft .]]
		
		].	

	(aStringOfCommands at: 1 )= $r ifTrue: [ 
		aStringOfCommands do:[:command| command = $r ifTrue:[self rotateRight .]]
		
		].	]! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 10:53:30'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 10:53:30'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 10:53:30'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 10:53:30'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:53:30'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:53:30'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:53:30'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:53:30'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:53:30'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:53:30'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:53:30'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:53:30'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 10:53:30'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/14/2023 10:53:30'!
FAILURE!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 10:53:30'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/14/2023 10:53:30'!
FAILURE!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/14/2023 10:54:04'!
test15ManyCommandsLeftShouldRotateLeftManyTimes

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'lll'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Oeste.! !

!methodRemoval: MarsRoverTest #test14ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/14/2023 10:54:04'!
test14ManyCommandsLeftShouldRotateLeftManyTimes

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'lll'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Oeste.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/14/2023 10:54:09' prior: 50609871!
test15ManyCommandsLeftShouldRotateLeftManyTimes

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Norte.
	
	rover commands: 'lll'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Este.! !

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/14/2023 10:54:11'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 10:54:11'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 10:54:11'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 10:54:11'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 10:54:11'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:54:11'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:54:11'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:54:11'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:54:11'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:54:11'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:54:11'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:54:11'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:54:11'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 10:54:11'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 10:54:11'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/14/2023 10:54:11'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/14/2023 10:56:52'!
test17

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Sur.
	
	rover commands: 'f'.
	
	self assert: rover position equals: 0@-1.
	self assert: rover direction equals: #Sur.! !

!testRun: #MarsRoverTest #test17 stamp: 'AG 5/14/2023 10:57:15'!
FAILURE!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/14/2023 10:58:51' prior: 50609795!
commands: aStringOfCommands 
	aStringOfCommands isEmpty ifFalse:[
	aStringOfCommands = 'f' ifTrue: [
		(self direction = #Norte)ifTrue:[		position := 0@1].
		(self direction = #Sur)ifTrue:[		position := 0@-1]
		].
	
	
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	
	
	(aStringOfCommands at: 1 )= $l ifTrue: [ 
		aStringOfCommands do:[:command| command = $l ifTrue:[self rotateLeft .]]
		
		].	

	(aStringOfCommands at: 1 )= $r ifTrue: [ 
		aStringOfCommands do:[:command| command = $r ifTrue:[self rotateRight .]]
		
		].	]! !

!testRun: #MarsRoverTest #test17 stamp: 'AG 5/14/2023 10:58:54'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 10:58:54'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 10:58:54'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 10:58:54'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 10:58:54'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:58:54'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:58:54'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:58:54'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:58:54'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 10:58:54'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 10:58:54'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 10:58:54'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 10:58:54'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 10:58:54'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 10:58:54'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/14/2023 10:58:54'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'AG 5/14/2023 10:58:54'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/14/2023 10:59:17'!
test18

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'f'.
	
	self assert: rover position equals: 1@0.
	self assert: rover direction equals: #Oeste.! !

!testRun: #MarsRoverTest #test18 stamp: 'AG 5/14/2023 10:59:20'!
FAILURE!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/14/2023 10:59:54' prior: 50609973!
commands: aStringOfCommands 
	aStringOfCommands isEmpty ifFalse:[
	aStringOfCommands = 'f' ifTrue: [
		(self direction = #Norte)ifTrue:[		position := 0@1].
		(self direction = #Sur)ifTrue:[		position := 0@-1].
		(self direction = #Oeste)ifTrue:[		position := -1@0].
		].
	
	
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	
	
	(aStringOfCommands at: 1 )= $l ifTrue: [ 
		aStringOfCommands do:[:command| command = $l ifTrue:[self rotateLeft .]]
		
		].	

	(aStringOfCommands at: 1 )= $r ifTrue: [ 
		aStringOfCommands do:[:command| command = $r ifTrue:[self rotateRight .]]
		
		].	]! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/14/2023 11:00:00' prior: 50610053!
test18

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'f'.
	
	self assert: rover position equals: -1@0.
	self assert: rover direction equals: #Oeste.! !

!testRun: #MarsRoverTest #test18 stamp: 'AG 5/14/2023 11:00:03'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 11:00:03'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 11:00:03'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 11:00:03'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 11:00:03'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:00:03'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:00:03'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:00:03'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:00:03'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:00:03'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:00:03'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:00:03'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:00:03'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 11:00:03'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 11:00:03'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/14/2023 11:00:03'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'AG 5/14/2023 11:00:03'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'AG 5/14/2023 11:00:03'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/14/2023 11:00:19'!
test19

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Este.
	
	rover commands: 'f'.
	
	self assert: rover position equals: 1@0.
	self assert: rover direction equals: #Este.! !

!testRun: #MarsRoverTest #test19 stamp: 'AG 5/14/2023 11:00:26'!
FAILURE!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/14/2023 11:00:44' prior: 50610064!
commands: aStringOfCommands 
	aStringOfCommands isEmpty ifFalse:[
	aStringOfCommands = 'f' ifTrue: [
		(self direction = #Norte)ifTrue:[		position := 0@1].
		(self direction = #Sur)ifTrue:[		position := 0@-1].
		(self direction = #Oeste)ifTrue:[		position := -1@0].
		(self direction = #Este)ifTrue:[		position := 1@0].].
	
	
	aStringOfCommands = 'b' ifTrue: [position := 0@-1].
	
	
	(aStringOfCommands at: 1 )= $l ifTrue: [ 
		aStringOfCommands do:[:command| command = $l ifTrue:[self rotateLeft .]]
		
		].	

	(aStringOfCommands at: 1 )= $r ifTrue: [ 
		aStringOfCommands do:[:command| command = $r ifTrue:[self rotateRight .]]
		
		].	]! !

!testRun: #MarsRoverTest #test19 stamp: 'AG 5/14/2023 11:00:47'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 11:00:47'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 11:00:47'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 11:00:47'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 11:00:47'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:00:47'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:00:47'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:00:47'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:00:47'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:00:47'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:00:47'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:00:47'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:00:47'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 11:00:47'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 11:00:47'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/14/2023 11:00:47'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'AG 5/14/2023 11:00:47'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'AG 5/14/2023 11:00:47'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'AG 5/14/2023 11:00:47'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/14/2023 11:02:17'!
test20

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Este.
	
	rover commands: 'b'.
	
	self assert: rover position equals: -1@0.
	self assert: rover direction equals: #Este.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/14/2023 11:02:44'!
test21

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Sur.
	
	rover commands: 'b'.
	
	self assert: rover position equals: 0@1.
	self assert: rover direction equals: #Sur.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/14/2023 11:02:56'!
test22

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'b'.
	
	self assert: rover position equals: 0@1.
	self assert: rover direction equals: #Oeste.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/14/2023 11:03:07' prior: 50610275!
test22

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'b'.
	
	self assert: rover position equals: 1@0.
	self assert: rover direction equals: #Oeste.! !

!testRun: #MarsRoverTest #test22 stamp: 'AG 5/14/2023 11:03:08'!
FAILURE!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/14/2023 11:03:48' prior: 50610169!
commands: aStringOfCommands 
	aStringOfCommands isEmpty ifFalse:[
	aStringOfCommands = 'f' ifTrue: [
		(self direction = #Norte)ifTrue:[		position := 0@1].
		(self direction = #Sur)ifTrue:[		position := 0@-1].
		(self direction = #Oeste)ifTrue:[		position := -1@0].
		(self direction = #Este)ifTrue:[		position := 1@0].].
	
	
	aStringOfCommands = 'b' ifTrue: [
		(self direction = #Norte)ifTrue:[		position := 0@-1].
		(self direction = #Sur)ifTrue:[		position := 0@1].
		(self direction = #Oeste)ifTrue:[		position := 1@0].
		(self direction = #Este)ifTrue:[		position := -1@0].
		].
	
	
	(aStringOfCommands at: 1 )= $l ifTrue: [ 
		aStringOfCommands do:[:command| command = $l ifTrue:[self rotateLeft .]]
		
		].	

	(aStringOfCommands at: 1 )= $r ifTrue: [ 
		aStringOfCommands do:[:command| command = $r ifTrue:[self rotateRight .]]
		
		].	]! !

!testRun: #MarsRoverTest #test22 stamp: 'AG 5/14/2023 11:03:50'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 11:03:50'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 11:03:50'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 11:03:50'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 11:03:50'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:03:50'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:03:50'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:03:50'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:03:50'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:03:50'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:03:50'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:03:50'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:03:50'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 11:03:50'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 11:03:50'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/14/2023 11:03:51'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'AG 5/14/2023 11:03:51'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'AG 5/14/2023 11:03:51'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'AG 5/14/2023 11:03:51'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'AG 5/14/2023 11:03:51'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'AG 5/14/2023 11:03:51'!
PASSED!

!testRun: #MarsRoverTest #test22 stamp: 'AG 5/14/2023 11:03:51'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/14/2023 11:05:39'!
test17CommandForwardFacingSurReduceOneYPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Sur.
	
	rover commands: 'f'.
	
	self assert: rover position equals: 0@-1.
	self assert: rover direction equals: #Sur.! !

!methodRemoval: MarsRoverTest #test17 stamp: 'AG 5/14/2023 11:05:39'!
test17

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Sur.
	
	rover commands: 'f'.
	
	self assert: rover position equals: 0@-1.
	self assert: rover direction equals: #Sur.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/14/2023 11:05:58'!
test19CommandForwardFacingEsteIncrementOneXPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Este.
	
	rover commands: 'f'.
	
	self assert: rover position equals: 1@0.
	self assert: rover direction equals: #Este.! !

!methodRemoval: MarsRoverTest #test19 stamp: 'AG 5/14/2023 11:05:58'!
test19

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Este.
	
	rover commands: 'f'.
	
	self assert: rover position equals: 1@0.
	self assert: rover direction equals: #Este.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/14/2023 11:06:16'!
test18CommandForwardFacingOesteReduceOneXPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'f'.
	
	self assert: rover position equals: -1@0.
	self assert: rover direction equals: #Oeste.! !

!methodRemoval: MarsRoverTest #test18 stamp: 'AG 5/14/2023 11:06:16'!
test18

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'f'.
	
	self assert: rover position equals: -1@0.
	self assert: rover direction equals: #Oeste.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/14/2023 11:06:55'!
test20CommandBackwardFacingEsteReduceOneXPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Este.
	
	rover commands: 'b'.
	
	self assert: rover position equals: -1@0.
	self assert: rover direction equals: #Este.! !

!methodRemoval: MarsRoverTest #test20 stamp: 'AG 5/14/2023 11:06:55'!
test20

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Este.
	
	rover commands: 'b'.
	
	self assert: rover position equals: -1@0.
	self assert: rover direction equals: #Este.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/14/2023 11:07:29'!
test21CommandBackwardFacingSurIncrementsOneYPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Sur.
	
	rover commands: 'b'.
	
	self assert: rover position equals: 0@1.
	self assert: rover direction equals: #Sur.! !

!methodRemoval: MarsRoverTest #test21 stamp: 'AG 5/14/2023 11:07:29'!
test21

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Sur.
	
	rover commands: 'b'.
	
	self assert: rover position equals: 0@1.
	self assert: rover direction equals: #Sur.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/14/2023 11:07:55'!
test22CommandBackwardFacingOesteIncrementsOneXPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'b'.
	
	self assert: rover position equals: 1@0.
	self assert: rover direction equals: #Oeste.! !

!methodRemoval: MarsRoverTest #test22 stamp: 'AG 5/14/2023 11:07:55'!
test22

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'b'.
	
	self assert: rover position equals: 1@0.
	self assert: rover direction equals: #Oeste.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/14/2023 11:08:42'!
test23

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'bb'.
	
	self assert: rover position equals: 2@0.
	self assert: rover direction equals: #Oeste.! !

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/14/2023 11:08:44'!
FAILURE!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/14/2023 11:09:30'!
moveBackward

	(self direction = #Norte)ifTrue:[		position := 0@-1].
		(self direction = #Sur)ifTrue:[		position := 0@1].
		(self direction = #Oeste)ifTrue:[		position := 1@0].
		(self direction = #Este)ifTrue:[		position := -1@0]! !
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/14/2023 11:09:30' prior: 50610295!
commands: aStringOfCommands 
	aStringOfCommands isEmpty ifFalse:[
	aStringOfCommands = 'f' ifTrue: [
		(self direction = #Norte)ifTrue:[		position := 0@1].
		(self direction = #Sur)ifTrue:[		position := 0@-1].
		(self direction = #Oeste)ifTrue:[		position := -1@0].
		(self direction = #Este)ifTrue:[		position := 1@0].].
	
	
	aStringOfCommands = 'b' ifTrue: [
		self moveBackward.
		].
	
	
	(aStringOfCommands at: 1 )= $l ifTrue: [ 
		aStringOfCommands do:[:command| command = $l ifTrue:[self rotateLeft .]]
		
		].	

	(aStringOfCommands at: 1 )= $r ifTrue: [ 
		aStringOfCommands do:[:command| command = $r ifTrue:[self rotateRight .]]
		
		].	]! !
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/14/2023 11:09:44'!
moveForward

	(self direction = #Norte)ifTrue:[		position := 0@1].
		(self direction = #Sur)ifTrue:[		position := 0@-1].
		(self direction = #Oeste)ifTrue:[		position := -1@0].
		(self direction = #Este)ifTrue:[		position := 1@0]! !
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/14/2023 11:09:45' prior: 50610526!
commands: aStringOfCommands 
	aStringOfCommands isEmpty ifFalse:[
	aStringOfCommands = 'f' ifTrue: [
		self moveForward.].
	
	
	aStringOfCommands = 'b' ifTrue: [
		self moveBackward.
		].
	
	
	(aStringOfCommands at: 1 )= $l ifTrue: [ 
		aStringOfCommands do:[:command| command = $l ifTrue:[self rotateLeft .]]
		
		].	

	(aStringOfCommands at: 1 )= $r ifTrue: [ 
		aStringOfCommands do:[:command| command = $r ifTrue:[self rotateRight .]]
		
		].	]! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 11:10:01'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 11:10:01'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 11:10:01'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 11:10:01'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:10:01'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:10:01'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:10:01'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:10:01'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:10:01'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:10:01'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:10:01'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:10:01'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 11:10:01'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 11:10:01'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/14/2023 11:10:01'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/14/2023 11:10:01'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/14/2023 11:10:01'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/14/2023 11:10:01'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/14/2023 11:10:01'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/14/2023 11:10:01'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/14/2023 11:10:01'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/14/2023 11:10:01'!
FAILURE!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/14/2023 11:10:01'!
FAILURE!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 11:10:10'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 11:10:10'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 11:10:10'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 11:10:10'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:10:10'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:10:10'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:10:10'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:10:10'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:10:10'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:10:10'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:10:10'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:10:10'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 11:10:10'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 11:10:10'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/14/2023 11:10:10'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/14/2023 11:10:10'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/14/2023 11:10:10'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/14/2023 11:10:10'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/14/2023 11:10:10'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/14/2023 11:10:10'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/14/2023 11:10:10'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/14/2023 11:10:10'!
FAILURE!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/14/2023 11:10:10'!
FAILURE!

1@1 at:1!

1@1!

1@0 x!

(1@0 )x!

(1@0 )y!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/14/2023 11:12:40' prior: 50610516!
moveBackward
	
	state moveMarsRoverBackward: self.
"	(self direction = #Norte)ifTrue:[		position := 0@-1].
		(self direction = #Sur)ifTrue:[		position := 0@1].
		(self direction = #Oeste)ifTrue:[		position := 1@0].
		(self direction = #Este)ifTrue:[		position := -1@0]"! !
!MarsRoverState methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:13:05'!
moveMarsRoverBackward: aMarsRover

	^self subclassResponsibility .! !
!MarsRoverSur methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:13:08' overrides: 50610756!
moveMarsRoverBackward: aMarsRover

	^self subclassResponsibility .! !
!MarsRoverEste methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:13:08' overrides: 50610756!
moveMarsRoverBackward: aMarsRover

	^self subclassResponsibility .! !
!MarsRoverOeste methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:13:09' overrides: 50610756!
moveMarsRoverBackward: aMarsRover

	^self subclassResponsibility .! !
!MarsRoverNorte methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:13:09' overrides: 50610756!
moveMarsRoverBackward: aMarsRover

	^self subclassResponsibility .! !

!methodRemoval: MarsRoverState #moveMarsRoverBackward: stamp: 'AG 5/14/2023 11:13:09'!
moveMarsRoverBackward: aMarsRover

	^self subclassResponsibility .!
!MarsRoverEste methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:13:40' prior: 50610768!
moveMarsRoverBackward: aMarsRover

	aMarsRover moveBackwardFromEste! !
!MarsRoverEste methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:13:57' prior: 50610791!
moveMarsRoverBackward: aMarsRover

	aMarsRover moveBackwardFacingEste! !
!MarsRoverEste methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:14:07' prior: 50610797!
moveMarsRoverBackward: aMarsRover

	aMarsRover moveBackwardFacingEste.! !
!MarsRoverNorte methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:14:23' prior: 50610780!
moveMarsRoverBackward: aMarsRover

	aMarsRover moveBackwardFacingNorte.! !
!MarsRoverOeste methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:14:39' prior: 50610774!
moveMarsRoverBackward: aMarsRover

	aMarsRover moveBackwardFacingOeste.! !
!MarsRoverSur methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:14:53' prior: 50610762!
moveMarsRoverBackward: aMarsRover

	aMarsRover moveBackwardFacingSur..! !
!MarsRoverSur methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:14:57' prior: 50610821!
moveMarsRoverBackward: aMarsRover

	aMarsRover moveBackwardFacingSur.! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 11:15:10'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 11:15:10'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 11:15:10'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 11:15:10'!
ERROR!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:15:10'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:15:10'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:15:10'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:15:10'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:15:10'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:15:10'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:15:10'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:15:11'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 11:15:11'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 11:15:11'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/14/2023 11:15:11'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/14/2023 11:15:11'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/14/2023 11:15:11'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/14/2023 11:15:11'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/14/2023 11:15:11'!
ERROR!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/14/2023 11:15:11'!
ERROR!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/14/2023 11:15:11'!
ERROR!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/14/2023 11:15:11'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:15:53'!
moveBackwardFacingEste
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:16:31' prior: 50610913!
moveBackwardFacingEste

				position := -1@0
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:16:42'!
moveBackwardFacingOeste

				position := 1@0
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:16:57'!
moveBackwardFacingNorte

				position := 0@-1
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:17:03'!
moveBackwardFacingSur

				position := 0@1
	! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 11:17:04'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 11:17:04'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 11:17:05'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 11:17:05'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:17:05'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:17:05'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:17:05'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:17:05'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:17:05'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:17:05'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:17:05'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:17:05'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 11:17:05'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 11:17:05'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/14/2023 11:17:05'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/14/2023 11:17:05'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/14/2023 11:17:05'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/14/2023 11:17:05'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/14/2023 11:17:05'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/14/2023 11:17:05'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/14/2023 11:17:05'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/14/2023 11:17:05'!
FAILURE!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/14/2023 11:17:05'!
FAILURE!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/14/2023 11:18:50' prior: 50610559!
commands: aStringOfCommands 
	aStringOfCommands isEmpty ifFalse:[
	aStringOfCommands = 'f' ifTrue: [
		self moveForward.].
	
	
	(aStringOfCommands at: 1)= $b ifTrue: [
		aStringOfCommands do:[:command| command = $b ifTrue:[self moveBackward .]
		].].
	
	
	(aStringOfCommands at: 1 )= $l ifTrue: [ 
		aStringOfCommands do:[:command| command = $l ifTrue:[self rotateLeft .]]
		
		].	

	(aStringOfCommands at: 1 )= $r ifTrue: [ 
		aStringOfCommands do:[:command| command = $r ifTrue:[self rotateRight .]]
		
		].	]! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 11:18:52'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 11:18:52'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 11:18:52'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 11:18:52'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:18:52'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:18:52'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:18:52'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:18:52'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:18:52'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:18:52'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:18:52'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:18:52'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 11:18:52'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 11:18:52'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/14/2023 11:18:52'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/14/2023 11:18:52'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/14/2023 11:18:52'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/14/2023 11:18:52'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/14/2023 11:18:52'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/14/2023 11:18:52'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/14/2023 11:18:52'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/14/2023 11:18:52'!
FAILURE!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/14/2023 11:18:52'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:21:08' prior: 50610917!
moveBackwardFacingEste

				position := position + 1@0.
	! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 11:21:10'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 11:21:10'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 11:21:10'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 11:21:10'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:21:10'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:21:10'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:21:10'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:21:10'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:21:10'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:21:10'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:21:10'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:21:10'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 11:21:10'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 11:21:10'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/14/2023 11:21:10'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/14/2023 11:21:10'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/14/2023 11:21:10'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/14/2023 11:21:10'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/14/2023 11:21:10'!
ERROR!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/14/2023 11:21:10'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/14/2023 11:21:10'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/14/2023 11:21:10'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:21:20' prior: 50611120!
moveBackwardFacingEste

				position := position + -1@0.
	! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 11:21:22'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 11:21:22'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 11:21:22'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 11:21:22'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:21:22'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:21:22'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:21:22'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:21:22'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:21:22'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:21:22'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:21:22'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:21:22'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 11:21:22'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 11:21:22'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/14/2023 11:21:22'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/14/2023 11:21:22'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/14/2023 11:21:22'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/14/2023 11:21:22'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/14/2023 11:21:22'!
ERROR!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/14/2023 11:21:22'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/14/2023 11:21:22'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/14/2023 11:21:22'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:21:33' prior: 50611206!
moveBackwardFacingEste

				position := position + (-1@0).
	! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 11:21:34'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 11:21:35'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 11:21:35'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 11:21:35'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:21:35'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:21:35'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:21:35'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:21:35'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:21:35'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:21:35'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:21:35'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:21:35'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 11:21:35'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 11:21:35'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/14/2023 11:21:35'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/14/2023 11:21:35'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/14/2023 11:21:35'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/14/2023 11:21:35'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/14/2023 11:21:35'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/14/2023 11:21:35'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/14/2023 11:21:35'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/14/2023 11:21:35'!
FAILURE!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/14/2023 11:21:35'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:22:07' prior: 50610921!
moveBackwardFacingOeste

				position := position + (1@0)
	! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 11:22:08'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 11:22:08'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 11:22:08'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 11:22:08'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:22:08'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:22:08'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:22:08'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:22:08'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:22:08'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:22:08'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:22:08'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:22:08'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 11:22:08'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 11:22:08'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/14/2023 11:22:08'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/14/2023 11:22:08'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/14/2023 11:22:08'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/14/2023 11:22:08'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/14/2023 11:22:08'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/14/2023 11:22:08'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/14/2023 11:22:08'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/14/2023 11:22:08'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:22:33' prior: 50610929!
moveBackwardFacingSur

				position := position + (0@1)
	! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 11:22:35'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 11:22:35'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 11:22:35'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 11:22:35'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:22:35'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:22:35'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:22:35'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:22:35'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:22:35'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:22:35'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:22:35'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:22:35'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 11:22:35'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 11:22:35'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/14/2023 11:22:35'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/14/2023 11:22:35'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/14/2023 11:22:35'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/14/2023 11:22:35'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/14/2023 11:22:35'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/14/2023 11:22:35'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/14/2023 11:22:35'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/14/2023 11:22:35'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:22:51' prior: 50610925!
moveBackwardFacingNorte

				position := position + (0@-1)
	! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 11:22:52'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 11:22:52'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 11:22:52'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 11:22:52'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:22:52'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:22:52'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:22:52'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:22:52'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:22:52'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:22:52'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:22:52'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:22:52'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 11:22:52'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 11:22:52'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/14/2023 11:22:52'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/14/2023 11:22:52'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/14/2023 11:22:52'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/14/2023 11:22:52'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/14/2023 11:22:52'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/14/2023 11:22:52'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/14/2023 11:22:52'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/14/2023 11:22:52'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/14/2023 11:24:25'!
test24

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'ff'.
	
	self assert: rover position equals: -2@0.
	self assert: rover direction equals: #Oeste.! !

!testRun: #MarsRoverTest #test24 stamp: 'AG 5/14/2023 11:24:27'!
FAILURE!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/14/2023 11:25:48' prior: 50611017!
commands: aStringOfCommands 
	aStringOfCommands isEmpty ifFalse:[
	(aStringOfCommands at: 1) = $f ifTrue: [
		aStringOfCommands do:[:command| command = $f ifTrue:[self moveForward].].].
	
	
	(aStringOfCommands at: 1)= $b ifTrue: [
		aStringOfCommands do:[:command| command = $b ifTrue:[self moveBackward .]
		].].
	
	
	(aStringOfCommands at: 1 )= $l ifTrue: [ 
		aStringOfCommands do:[:command| command = $l ifTrue:[self rotateLeft .]]
		
		].	

	(aStringOfCommands at: 1 )= $r ifTrue: [ 
		aStringOfCommands do:[:command| command = $r ifTrue:[self rotateRight .]]
		
		].	]! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 11:25:49'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 11:25:49'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 11:25:49'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 11:25:49'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:25:49'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:25:49'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:25:49'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:25:49'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:25:49'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:25:49'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:25:49'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:25:49'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 11:25:49'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 11:25:49'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/14/2023 11:25:49'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/14/2023 11:25:49'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/14/2023 11:25:49'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/14/2023 11:25:49'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/14/2023 11:25:49'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/14/2023 11:25:49'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/14/2023 11:25:49'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/14/2023 11:25:49'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'AG 5/14/2023 11:25:49'!
FAILURE!

!testRun: #MarsRoverTest #test24 stamp: 'AG 5/14/2023 11:25:49'!
FAILURE!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/14/2023 11:26:31' prior: 50610549!
moveForward

	state moveMarsRoverForward: self.
"	(self direction = #Norte)ifTrue:[		position := 0@1].
		(self direction = #Sur)ifTrue:[		position := 0@-1].
		(self direction = #Oeste)ifTrue:[		position := -1@0].
		(self direction = #Este)ifTrue:[		position := 1@0]"! !
!MarsRoverState methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:26:48'!
moveMarsRoverForward: aMarsRover

	self subclassResponsibility .! !
!MarsRoverSur methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:26:52' overrides: 50611768!
moveMarsRoverForward: aMarsRover

	self subclassResponsibility .! !
!MarsRoverEste methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:26:52' overrides: 50611768!
moveMarsRoverForward: aMarsRover

	self subclassResponsibility .! !
!MarsRoverOeste methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:26:52' overrides: 50611768!
moveMarsRoverForward: aMarsRover

	self subclassResponsibility .! !
!MarsRoverNorte methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:26:52' overrides: 50611768!
moveMarsRoverForward: aMarsRover

	self subclassResponsibility .! !

!methodRemoval: MarsRoverState #moveMarsRoverForward: stamp: 'AG 5/14/2023 11:26:52'!
moveMarsRoverForward: aMarsRover

	self subclassResponsibility .!
!MarsRoverEste methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:27:19' prior: 50611780!
moveMarsRoverForward: aMarsRover

	aMarsRover moveForwardFacingEste.! !
!MarsRoverNorte methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:27:31' prior: 50611792!
moveMarsRoverForward: aMarsRover

	aMarsRover moveForwardFacingNorte.! !
!MarsRoverOeste methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:27:43' prior: 50611786!
moveMarsRoverForward: aMarsRover

	aMarsRover moveForwardFacingOeste.! !
!MarsRoverSur methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:27:52' prior: 50611774!
moveMarsRoverForward: aMarsRover

	aMarsRover moveForwardFacingSur.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:28:14'!
moveForwardFacingEste

				
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:28:56' prior: 50611825!
moveForwardFacingEste

				

		position := 1@0! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:29:11'!
moveForwardFacingOeste

				

		position := -1@0! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:29:24'!
moveForwardFacingSur

				

		position := 0@-1! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:29:31'!
moveForwardFacingNorte

				

		position := 0@1! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 11:29:32'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 11:29:32'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 11:29:32'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 11:29:32'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:29:33'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:29:33'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:29:33'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:29:33'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:29:33'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:29:33'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:29:33'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:29:33'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 11:29:33'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 11:29:33'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/14/2023 11:29:33'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/14/2023 11:29:33'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/14/2023 11:29:33'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/14/2023 11:29:33'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/14/2023 11:29:33'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/14/2023 11:29:33'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/14/2023 11:29:33'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/14/2023 11:29:33'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'AG 5/14/2023 11:29:33'!
FAILURE!

!testRun: #MarsRoverTest #test24 stamp: 'AG 5/14/2023 11:29:33'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:30:05' prior: 50611842!
moveForwardFacingNorte

		position := (0@1) + position.! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 11:30:06'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 11:30:06'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 11:30:06'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 11:30:06'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:30:06'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:30:06'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:30:06'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:30:06'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:30:06'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:30:06'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:30:06'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:30:06'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 11:30:06'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 11:30:06'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/14/2023 11:30:06'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/14/2023 11:30:06'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/14/2023 11:30:07'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/14/2023 11:30:07'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/14/2023 11:30:07'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/14/2023 11:30:07'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/14/2023 11:30:07'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/14/2023 11:30:07'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'AG 5/14/2023 11:30:07'!
FAILURE!

!testRun: #MarsRoverTest #test24 stamp: 'AG 5/14/2023 11:30:07'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:30:18' prior: 50611933!
moveForwardFacingNorte

		position := position + (0@1).! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:30:28' prior: 50611829!
moveForwardFacingEste

				

		position := position + (1@0)! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 11:30:29'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 11:30:29'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 11:30:29'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 11:30:29'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:30:29'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:30:29'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:30:29'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:30:29'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:30:29'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:30:29'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:30:29'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:30:29'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 11:30:29'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 11:30:29'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/14/2023 11:30:29'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/14/2023 11:30:29'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/14/2023 11:30:29'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/14/2023 11:30:29'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/14/2023 11:30:29'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/14/2023 11:30:29'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/14/2023 11:30:29'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/14/2023 11:30:29'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'AG 5/14/2023 11:30:29'!
FAILURE!

!testRun: #MarsRoverTest #test24 stamp: 'AG 5/14/2023 11:30:29'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:30:41' prior: 50611833!
moveForwardFacingOeste

				

		position := position + (-1@0)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AG 5/14/2023 11:30:49' prior: 50611838!
moveForwardFacingSur

				

		position := position + (0@-1)! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 11:30:50'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 11:30:50'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 11:30:50'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 11:30:50'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:30:50'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:30:50'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:30:50'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:30:50'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:30:50'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:30:50'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:30:50'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:30:50'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 11:30:50'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 11:30:50'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/14/2023 11:30:50'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/14/2023 11:30:50'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/14/2023 11:30:50'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/14/2023 11:30:50'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/14/2023 11:30:51'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/14/2023 11:30:51'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/14/2023 11:30:51'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/14/2023 11:30:51'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'AG 5/14/2023 11:30:51'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/14/2023 11:30:55'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/14/2023 11:30:55'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/14/2023 11:30:55'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/14/2023 11:30:55'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:30:55'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:30:56'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:30:56'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:30:56'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/14/2023 11:30:56'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/14/2023 11:30:56'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/14/2023 11:30:56'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/14/2023 11:30:56'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/14/2023 11:30:56'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/14/2023 11:30:56'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/14/2023 11:30:56'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/14/2023 11:30:56'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/14/2023 11:30:56'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/14/2023 11:30:56'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/14/2023 11:30:56'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/14/2023 11:30:56'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/14/2023 11:30:56'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/14/2023 11:30:56'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'AG 5/14/2023 11:30:56'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/14/2023 11:31:40'!
test25

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'ffbl'.
	
	self assert: rover position equals: -1@0.
	self assert: rover direction equals: #Sur.! !

!testRun: #MarsRoverTest #test25 stamp: 'AG 5/14/2023 11:31:40'!
FAILURE!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/14/2023 11:33:38' prior: 50611650!
commands: aStringOfCommands 
"
	aStringOfCommands do:[:command| command = $f ifTrue:[].
		command = $b ifTrue:[].
		command = $l ifTrue:[].
		command = $r ifTrue:[].]."
	aStringOfCommands isEmpty ifFalse:[
	(aStringOfCommands at: 1) = $f ifTrue: [
		aStringOfCommands do:[:command| command = $f ifTrue:[self moveForward].].].
	
	
	(aStringOfCommands at: 1)= $b ifTrue: [
		aStringOfCommands do:[:command| command = $b ifTrue:[self moveBackward .]
		].].
	
	
	(aStringOfCommands at: 1 )= $l ifTrue: [ 
		aStringOfCommands do:[:command| command = $l ifTrue:[self rotateLeft .]]
		
		].	

	(aStringOfCommands at: 1 )= $r ifTrue: [ 
		aStringOfCommands do:[:command| command = $r ifTrue:[self rotateRight .]]
		
		].	]! !

----SNAPSHOT----(14 May 2023 11:33:43) CuisUniversity-5706.image priorSource: 8860123!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/15/2023 12:52:59' prior: 50612308!
commands: aStringOfCommands 

	aStringOfCommands do:[:command| command = $f ifTrue:[self moveForward].
		command = $b ifTrue:[self moveBackward].
		command = $l ifTrue:[self rotateLeft ].
		command = $r ifTrue:[self rotateRight].].
	"aStringOfCommands isEmpty ifFalse:[
	(aStringOfCommands at: 1) = $f ifTrue: [
		aStringOfCommands do:[:command| command = $f ifTrue:[self moveForward].].].
	
	
	(aStringOfCommands at: 1)= $b ifTrue: [
		aStringOfCommands do:[:command| command = $b ifTrue:[self moveBackward .]
		].].
	
	
	(aStringOfCommands at: 1 )= $l ifTrue: [ 
		aStringOfCommands do:[:command| command = $l ifTrue:[self rotateLeft .]]
		
		].	

	(aStringOfCommands at: 1 )= $r ifTrue: [ 
		aStringOfCommands do:[:command| command = $r ifTrue:[self rotateRight .]]
		
		].	]"! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/15/2023 12:53:00'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/15/2023 12:53:00'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/15/2023 12:53:00'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/15/2023 12:53:00'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 12:53:00'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/15/2023 12:53:00'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 12:53:00'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 12:53:00'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 12:53:00'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 12:53:00'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 12:53:00'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/15/2023 12:53:00'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/15/2023 12:53:00'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/15/2023 12:53:00'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/15/2023 12:53:00'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/15/2023 12:53:00'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/15/2023 12:53:00'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/15/2023 12:53:00'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/15/2023 12:53:00'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/15/2023 12:53:00'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/15/2023 12:53:01'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/15/2023 12:53:01'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'AG 5/15/2023 12:53:01'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'AG 5/15/2023 12:53:01'!
PASSED!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/15/2023 12:53:09' prior: 50612336!
commands: aStringOfCommands 

	aStringOfCommands do:[:command| command = $f ifTrue:[self moveForward].
		command = $b ifTrue:[self moveBackward].
		command = $l ifTrue:[self rotateLeft ].
		command = $r ifTrue:[self rotateRight].].! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/15/2023 12:53:10'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/15/2023 12:53:10'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/15/2023 12:53:10'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/15/2023 12:53:10'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 12:53:10'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/15/2023 12:53:10'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 12:53:10'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 12:53:10'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 12:53:10'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 12:53:10'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 12:53:10'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/15/2023 12:53:10'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/15/2023 12:53:10'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/15/2023 12:53:10'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/15/2023 12:53:10'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/15/2023 12:53:10'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/15/2023 12:53:10'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/15/2023 12:53:10'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/15/2023 12:53:10'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/15/2023 12:53:10'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/15/2023 12:53:10'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/15/2023 12:53:10'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'AG 5/15/2023 12:53:10'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'AG 5/15/2023 12:53:10'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 12:54:11' prior: 50610505!
test23

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'bbb'.
	
	self assert: rover position equals: 2@0.
	self assert: rover direction equals: #Oeste.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 12:54:16' prior: 50611638!
test24

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'fff'.
	
	self assert: rover position equals: -2@0.
	self assert: rover direction equals: #Oeste.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 12:54:20' prior: 50612545!
test23

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'bbb'.
	
	self assert: rover position equals: 3@0.
	self assert: rover direction equals: #Oeste.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 12:54:25' prior: 50612554!
test24

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'fff'.
	
	self assert: rover position equals: -3@0.
	self assert: rover direction equals: #Oeste.! !

!testRun: #MarsRoverTest #test24 stamp: 'AG 5/15/2023 12:54:26'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/15/2023 12:54:26'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/15/2023 12:54:26'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/15/2023 12:54:26'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/15/2023 12:54:26'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 12:54:26'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/15/2023 12:54:26'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 12:54:26'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 12:54:26'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 12:54:26'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 12:54:26'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 12:54:26'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/15/2023 12:54:26'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/15/2023 12:54:26'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/15/2023 12:54:26'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/15/2023 12:54:26'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/15/2023 12:54:26'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/15/2023 12:54:26'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/15/2023 12:54:26'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/15/2023 12:54:26'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/15/2023 12:54:26'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/15/2023 12:54:26'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/15/2023 12:54:26'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'AG 5/15/2023 12:54:26'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'AG 5/15/2023 12:54:26'!
PASSED!

Object subclass: #Command
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

!classDefinition: #Command category: 'MarsRoverExersice' stamp: 'AG 5/15/2023 12:56:37'!
Object subclass: #Command
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

Command subclass: #Forward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

!classDefinition: #Forward category: 'MarsRoverExersice' stamp: 'AG 5/15/2023 12:57:46'!
Command subclass: #Forward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

Command subclass: #Backward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

!classDefinition: #Backward category: 'MarsRoverExersice' stamp: 'AG 5/15/2023 12:57:54'!
Command subclass: #Backward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

Command subclass: #Left
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

!classDefinition: #Left category: 'MarsRoverExersice' stamp: 'AG 5/15/2023 13:01:15'!
Command subclass: #Left
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

Command subclass: #Right
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!

!classDefinition: #Right category: 'MarsRoverExersice' stamp: 'AG 5/15/2023 13:01:24'!
Command subclass: #Right
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExersice'!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/15/2023 13:05:39' prior: 50612449!
commands: aStringOfCommands 

	aStringOfCommands do:[:character| |command| 
		
		command := Command with: character. 
		
		command = $f ifTrue:[self moveForward].
		command = $b ifTrue:[self moveBackward].
		command = $l ifTrue:[self rotateLeft ].
		command = $r ifTrue:[self rotateRight].].! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/15/2023 13:05:40'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/15/2023 13:05:40'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/15/2023 13:05:40'!
ERROR!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/15/2023 13:05:40'!
ERROR!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:05:40'!
ERROR!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:05:40'!
ERROR!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:05:40'!
ERROR!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:05:40'!
ERROR!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:05:40'!
ERROR!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:05:40'!
ERROR!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:05:40'!
ERROR!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:05:40'!
ERROR!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/15/2023 13:05:40'!
ERROR!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/15/2023 13:05:40'!
ERROR!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/15/2023 13:05:40'!
ERROR!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/15/2023 13:05:40'!
ERROR!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/15/2023 13:05:40'!
ERROR!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/15/2023 13:05:40'!
ERROR!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/15/2023 13:05:40'!
ERROR!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/15/2023 13:05:40'!
ERROR!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/15/2023 13:05:40'!
ERROR!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/15/2023 13:05:40'!
ERROR!

!testRun: #MarsRoverTest #test24 stamp: 'AG 5/15/2023 13:05:40'!
ERROR!

!testRun: #MarsRoverTest #test25 stamp: 'AG 5/15/2023 13:05:40'!
ERROR!
!Command class methodsFor: 'no messages' stamp: 'AG 5/15/2023 13:06:16'!
with: aCharacter
	^self new initialize: aCharacter.! !

Command subclass: #Invalid
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #Invalid category: 'MarsRoverExercise' stamp: 'AG 5/15/2023 13:06:46'!
Command subclass: #Invalid
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classRemoval: #Invalid stamp: 'AG 5/15/2023 13:07:25'!
Command subclass: #Invalid
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!
!Command methodsFor: 'no messages' stamp: 'AG 5/15/2023 13:07:54'!
initialize: aCharacter.
	^self! !
!Command methodsFor: 'as yet unclassified' stamp: 'AG 5/15/2023 13:08:26'!
initializeWith: aCharacter.
	^self! !
!Command class methodsFor: 'as yet unclassified' stamp: 'AG 5/15/2023 13:08:26' prior: 50612821!
with: aCharacter
	^self new initializeWith: aCharacter.! !

!methodRemoval: Command #initialize: stamp: 'AG 5/15/2023 13:08:26'!
initialize: aCharacter.
	^self!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/15/2023 12:52:59' prior: 50612724!
commands: aStringOfCommands 

	aStringOfCommands do:[:command| command = $f ifTrue:[self moveForward].
		command = $b ifTrue:[self moveBackward].
		command = $l ifTrue:[self rotateLeft ].
		command = $r ifTrue:[self rotateRight].].
	"aStringOfCommands isEmpty ifFalse:[
	(aStringOfCommands at: 1) = $f ifTrue: [
		aStringOfCommands do:[:command| command = $f ifTrue:[self moveForward].].].
	
	
	(aStringOfCommands at: 1)= $b ifTrue: [
		aStringOfCommands do:[:command| command = $b ifTrue:[self moveBackward .]
		].].
	
	
	(aStringOfCommands at: 1 )= $l ifTrue: [ 
		aStringOfCommands do:[:command| command = $l ifTrue:[self rotateLeft .]]
		
		].	

	(aStringOfCommands at: 1 )= $r ifTrue: [ 
		aStringOfCommands do:[:command| command = $r ifTrue:[self rotateRight .]]
		
		].	]"! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/15/2023 13:14:26'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/15/2023 13:14:26'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/15/2023 13:14:26'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/15/2023 13:14:26'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:14:26'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:14:26'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:14:26'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:14:26'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:14:26'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:14:26'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:14:26'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:14:26'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/15/2023 13:14:26'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/15/2023 13:14:26'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/15/2023 13:14:26'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/15/2023 13:14:26'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/15/2023 13:14:26'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/15/2023 13:14:26'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/15/2023 13:14:26'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/15/2023 13:14:26'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/15/2023 13:14:26'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/15/2023 13:14:26'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'AG 5/15/2023 13:14:26'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'AG 5/15/2023 13:14:26'!
PASSED!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/15/2023 13:05:39' prior: 50612859!
commands: aStringOfCommands 

	aStringOfCommands do:[:character| |command| 
		
		command := Command with: character. 
		
		command = $f ifTrue:[self moveForward].
		command = $b ifTrue:[self moveBackward].
		command = $l ifTrue:[self rotateLeft ].
		command = $r ifTrue:[self rotateRight].].! !
!Command class methodsFor: 'instance creation' stamp: 'AG 5/15/2023 13:16:22' prior: 50612851!
with: aCharacter

	^self new initializeWith: aCharacter.! !
!Command class methodsFor: 'instance creation' stamp: 'AG 5/15/2023 13:17:19'!
canHandle: aCharacter
	self subclassResponsibility .! !
!Command class methodsFor: 'instance creation' stamp: 'AG 5/15/2023 13:17:20' prior: 50612990!
canHandle: aCharacter

	self subclassResponsibility .! !
!Command class methodsFor: 'instance creation' stamp: 'AG 5/15/2023 13:18:57' prior: 50612985!
with: aCharacter

	^(self subclasses detect: [:aCommandClass | aCommandClass canHandle: aCharacter ]) new.! !
!Forward class methodsFor: 'instance creation' stamp: 'AG 5/15/2023 13:19:14' overrides: 50612995!
canHandle: aCharacter

	self subclassResponsibility .! !
!Backward class methodsFor: 'instance creation' stamp: 'AG 5/15/2023 13:19:14' overrides: 50612995!
canHandle: aCharacter

	self subclassResponsibility .! !
!Left class methodsFor: 'instance creation' stamp: 'AG 5/15/2023 13:19:14' overrides: 50612995!
canHandle: aCharacter

	self subclassResponsibility .! !
!Right class methodsFor: 'instance creation' stamp: 'AG 5/15/2023 13:19:14' overrides: 50612995!
canHandle: aCharacter

	self subclassResponsibility .! !

!methodRemoval: Command class #canHandle: stamp: 'AG 5/15/2023 13:19:14'!
canHandle: aCharacter

	self subclassResponsibility .!
!Command class methodsFor: 'instance creation' stamp: 'AG 5/15/2023 13:19:19'!
canHandle: aCharacter

	self subclassResponsibility .! !
!Backward class methodsFor: 'instance creation' stamp: 'AG 5/15/2023 13:19:35' prior: 50613012 overrides: 50613031!
canHandle: aCharacter

	^aCharacter = $b.! !
!Forward class methodsFor: 'instance creation' stamp: 'AG 5/15/2023 13:19:53' prior: 50613007 overrides: 50613031!
canHandle: aCharacter

	^aCharacter = $f.! !
!Left class methodsFor: 'instance creation' stamp: 'AG 5/15/2023 13:20:09' prior: 50613017 overrides: 50613031!
canHandle: aCharacter

	^aCharacter = $l.! !
!Right class methodsFor: 'instance creation' stamp: 'AG 5/15/2023 13:20:16' prior: 50613022 overrides: 50613031!
canHandle: aCharacter

	^aCharacter = $r! !

!methodRemoval: Command #initializeWith: stamp: 'AG 5/15/2023 13:20:51'!
initializeWith: aCharacter.
	^self!
!Command methodsFor: 'no messages' stamp: 'AG 5/15/2023 13:21:39'!
execute: aMarsRover

	self subclassResponsibility ! !
!Forward methodsFor: 'as yet unclassified' stamp: 'AG 5/15/2023 13:21:45' overrides: 50613059!
execute: aMarsRover

	self subclassResponsibility ! !
!Backward methodsFor: 'as yet unclassified' stamp: 'AG 5/15/2023 13:21:45' overrides: 50613059!
execute: aMarsRover

	self subclassResponsibility ! !
!Left methodsFor: 'as yet unclassified' stamp: 'AG 5/15/2023 13:21:45' overrides: 50613059!
execute: aMarsRover

	self subclassResponsibility ! !
!Right methodsFor: 'as yet unclassified' stamp: 'AG 5/15/2023 13:21:45' overrides: 50613059!
execute: aMarsRover

	self subclassResponsibility ! !

!methodRemoval: Command #execute: stamp: 'AG 5/15/2023 13:21:45'!
execute: aMarsRover

	self subclassResponsibility !
!Command methodsFor: 'no messages' stamp: 'AG 5/15/2023 13:22:21'!
execute: aMarsRover

	self subclassResponsibility .! !
!Backward methodsFor: 'as yet unclassified' stamp: 'AG 5/15/2023 13:22:43' prior: 50613069 overrides: 50613087!
execute: aMarsRover

	aMarsRover moveBackward ! !
!Forward methodsFor: 'as yet unclassified' stamp: 'AG 5/15/2023 13:22:59' prior: 50613064 overrides: 50613087!
execute: aMarsRover

	aMarsRover moveForward ! !
!Left methodsFor: 'as yet unclassified' stamp: 'AG 5/15/2023 13:23:18' prior: 50613074 overrides: 50613087!
execute: aMarsRover

	aMarsRover rotateLeft .! !
!Right methodsFor: 'as yet unclassified' stamp: 'AG 5/15/2023 13:23:36' prior: 50613079 overrides: 50613087!
execute: aMarsRover

	aMarsRover rotateRight . ! !
!Command methodsFor: 'as yet unclassified' stamp: 'AG 5/15/2023 13:24:52'!
executeIn: aMarsRover

	self subclassResponsibility .! !
!Backward methodsFor: 'as yet unclassified' stamp: 'AG 5/15/2023 13:24:52' overrides: 50613113!
executeIn: aMarsRover

	aMarsRover moveBackward ! !
!Forward methodsFor: 'as yet unclassified' stamp: 'AG 5/15/2023 13:24:53' overrides: 50613113!
executeIn: aMarsRover

	aMarsRover moveForward ! !
!Left methodsFor: 'as yet unclassified' stamp: 'AG 5/15/2023 13:24:53' overrides: 50613113!
executeIn: aMarsRover

	aMarsRover rotateLeft .! !
!Right methodsFor: 'as yet unclassified' stamp: 'AG 5/15/2023 13:24:53' overrides: 50613113!
executeIn: aMarsRover

	aMarsRover rotateRight . ! !

!methodRemoval: Command #execute: stamp: 'AG 5/15/2023 13:24:53'!
execute: aMarsRover

	self subclassResponsibility .!

!methodRemoval: Backward #execute: stamp: 'AG 5/15/2023 13:24:53'!
execute: aMarsRover

	aMarsRover moveBackward !

!methodRemoval: Forward #execute: stamp: 'AG 5/15/2023 13:24:53'!
execute: aMarsRover

	aMarsRover moveForward !

!methodRemoval: Left #execute: stamp: 'AG 5/15/2023 13:24:53'!
execute: aMarsRover

	aMarsRover rotateLeft .!

!methodRemoval: Right #execute: stamp: 'AG 5/15/2023 13:24:53'!
execute: aMarsRover

	aMarsRover rotateRight . !
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/15/2023 13:25:30' prior: 50612972!
commands: aStringOfCommands 

	aStringOfCommands do:[:character| |command| 
		
		command := Command with: character. 
		command executeIn: self.
		"
		command = $f ifTrue:[self moveForward].
		command = $b ifTrue:[self moveBackward].
		command = $l ifTrue:[self rotateLeft ].
		command = $r ifTrue:[self rotateRight]."].! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/15/2023 13:25:32'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/15/2023 13:25:32'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/15/2023 13:25:32'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/15/2023 13:25:32'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:25:32'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:25:32'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:25:32'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:25:32'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:25:32'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:25:32'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:25:32'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:25:32'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/15/2023 13:25:32'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/15/2023 13:25:32'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/15/2023 13:25:32'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/15/2023 13:25:32'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/15/2023 13:25:32'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/15/2023 13:25:32'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/15/2023 13:25:32'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/15/2023 13:25:32'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/15/2023 13:25:32'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/15/2023 13:25:32'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'AG 5/15/2023 13:25:32'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'AG 5/15/2023 13:25:32'!
PASSED!
!MarsRover methodsFor: 'accessing' stamp: 'AG 5/15/2023 13:25:42' prior: 50613156!
commands: aStringOfCommands 

	aStringOfCommands do:[:character| |command| 
		
		command := Command with: character. 
		command executeIn: self.].! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/15/2023 13:25:43'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/15/2023 13:25:43'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/15/2023 13:25:43'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/15/2023 13:25:43'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:25:43'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:25:43'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:25:43'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:25:43'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:25:43'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:25:43'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:25:43'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:25:43'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/15/2023 13:25:43'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/15/2023 13:25:43'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/15/2023 13:25:43'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/15/2023 13:25:43'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/15/2023 13:25:43'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/15/2023 13:25:43'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/15/2023 13:25:43'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/15/2023 13:25:43'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/15/2023 13:25:43'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/15/2023 13:25:43'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'AG 5/15/2023 13:25:43'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'AG 5/15/2023 13:25:43'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:26:52'!
test26

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'ffblt'.
	
	self assert: rover position equals: -1@0.
	self assert: rover direction equals: #Sur.! !

!testRun: #MarsRoverTest #test26 stamp: 'AG 5/15/2023 13:26:53'!
ERROR!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/15/2023 13:27:01'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/15/2023 13:27:01'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/15/2023 13:27:01'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/15/2023 13:27:01'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/15/2023 13:27:01'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:27:01'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:27:01'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:27:01'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:27:01'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:27:01'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:27:01'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:27:01'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:27:01'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/15/2023 13:27:01'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/15/2023 13:27:01'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/15/2023 13:27:01'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/15/2023 13:27:01'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/15/2023 13:27:01'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/15/2023 13:27:01'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/15/2023 13:27:01'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/15/2023 13:27:01'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/15/2023 13:27:01'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/15/2023 13:27:01'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'AG 5/15/2023 13:27:01'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'AG 5/15/2023 13:27:01'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'AG 5/15/2023 13:27:01'!
ERROR!

!testRun: #MarsRoverTest #test26 stamp: 'AG 5/15/2023 13:27:01'!
ERROR!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/15/2023 13:27:06'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/15/2023 13:27:06'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/15/2023 13:27:06'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/15/2023 13:27:06'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:27:06'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:27:06'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:27:06'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:27:06'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:27:06'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:27:07'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:27:07'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:27:07'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/15/2023 13:27:07'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/15/2023 13:27:07'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/15/2023 13:27:07'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/15/2023 13:27:07'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/15/2023 13:27:07'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/15/2023 13:27:07'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/15/2023 13:27:07'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/15/2023 13:27:07'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/15/2023 13:27:07'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/15/2023 13:27:07'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'AG 5/15/2023 13:27:07'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'AG 5/15/2023 13:27:07'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'AG 5/15/2023 13:27:07'!
ERROR!

!testRun: #MarsRoverTest #test26 stamp: 'AG 5/15/2023 13:27:07'!
ERROR!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/15/2023 13:27:21'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'AG 5/15/2023 13:27:32'!
ERROR!
!Command class methodsFor: 'instance creation' stamp: 'AG 5/15/2023 13:30:38' prior: 50613000!
with: aCharacter

	^(self subclasses detect: [:aCommandClass | aCommandClass canHandle: aCharacter ] ifNone:[self error: 'comando erróneo']) new.! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/15/2023 13:30:44'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/15/2023 13:30:44'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/15/2023 13:30:44'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/15/2023 13:30:44'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:30:44'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:30:44'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:30:44'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:30:44'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:30:44'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:30:44'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:30:44'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:30:44'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/15/2023 13:30:44'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/15/2023 13:30:44'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/15/2023 13:30:44'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/15/2023 13:30:44'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/15/2023 13:30:44'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/15/2023 13:30:44'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/15/2023 13:30:44'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/15/2023 13:30:44'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/15/2023 13:30:44'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/15/2023 13:30:44'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'AG 5/15/2023 13:30:44'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'AG 5/15/2023 13:30:44'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'AG 5/15/2023 13:30:44'!
ERROR!

!testRun: #MarsRoverTest #test26 stamp: 'AG 5/15/2023 13:30:44'!
ERROR!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:33:39' prior: 50613348!
test26

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	
	self should: [rover commands: 'ffblt'.]
		raise: Error
		withExceptionDo: [nil] ! !

!testRun: #MarsRoverTest #test26 stamp: 'AG 5/15/2023 13:33:40'!
ERROR!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:34:06' prior: 50613646!
test26

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	
	self should: [rover commands: 'ffblt'.]
		raise: Error
		withExceptionDo: [:error| self assert: 'comando erroneo' equals: error messageText.] ! !
!Command class methodsFor: 'instance creation' stamp: 'AG 5/15/2023 13:34:25' prior: 50613548!
with: aCharacter

	^(self subclasses detect: [:aCommandClass | aCommandClass canHandle: aCharacter ] ifNone:[self error: 'comando erroneo']) new.! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/15/2023 13:34:32'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/15/2023 13:34:32'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/15/2023 13:34:32'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/15/2023 13:34:32'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:34:32'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:34:32'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:34:32'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:34:32'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:34:32'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:34:32'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:34:32'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:34:32'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/15/2023 13:34:32'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/15/2023 13:34:32'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/15/2023 13:34:32'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/15/2023 13:34:32'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/15/2023 13:34:32'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/15/2023 13:34:32'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/15/2023 13:34:32'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/15/2023 13:34:32'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/15/2023 13:34:32'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/15/2023 13:34:32'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'AG 5/15/2023 13:34:32'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'AG 5/15/2023 13:34:32'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'AG 5/15/2023 13:34:32'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'AG 5/15/2023 13:34:39'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/15/2023 13:34:39'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/15/2023 13:34:39'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/15/2023 13:34:39'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/15/2023 13:34:39'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:34:39'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:34:39'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:34:39'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:34:39'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:34:39'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:34:39'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:34:39'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:34:39'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/15/2023 13:34:39'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/15/2023 13:34:39'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/15/2023 13:34:39'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/15/2023 13:34:39'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/15/2023 13:34:39'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/15/2023 13:34:39'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/15/2023 13:34:39'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/15/2023 13:34:39'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/15/2023 13:34:39'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/15/2023 13:34:39'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'AG 5/15/2023 13:34:39'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'AG 5/15/2023 13:34:39'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'AG 5/15/2023 13:34:40'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:35:46'!
test27

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	
	self should: [rover commands: 'ffbltf'.]
		raise: Error
		withExceptionDo: [:error| self assert: 'comando erroneo' equals: error messageText.] ! !

!testRun: #MarsRoverTest #test27 stamp: 'AG 5/15/2023 13:35:47'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/15/2023 13:35:47'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/15/2023 13:35:47'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/15/2023 13:35:47'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/15/2023 13:35:47'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:35:47'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:35:47'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:35:47'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:35:47'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:35:47'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:35:48'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:35:48'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:35:48'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/15/2023 13:35:48'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/15/2023 13:35:48'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/15/2023 13:35:48'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/15/2023 13:35:48'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/15/2023 13:35:48'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/15/2023 13:35:48'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/15/2023 13:35:48'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/15/2023 13:35:48'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/15/2023 13:35:48'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/15/2023 13:35:48'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'AG 5/15/2023 13:35:48'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'AG 5/15/2023 13:35:48'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'AG 5/15/2023 13:35:48'!
PASSED!

!testRun: #MarsRoverTest #test27 stamp: 'AG 5/15/2023 13:35:48'!
PASSED!

!methodRemoval: MarsRoverTest #test27 stamp: 'AG 5/15/2023 13:35:59'!
test27

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	
	self should: [rover commands: 'ffbltf'.]
		raise: Error
		withExceptionDo: [:error| self assert: 'comando erroneo' equals: error messageText.] !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:36:47' prior: 50613657!
test26

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	
	self should: [rover commands: 'ffbltf'.]
		raise: Error
		withExceptionDo: [:error| self assert: 'comando erroneo' equals: error messageText.] ! !

!testRun: #MarsRoverTest #test26 stamp: 'AG 5/15/2023 13:36:49'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/15/2023 13:36:49'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/15/2023 13:36:49'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/15/2023 13:36:49'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/15/2023 13:36:49'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:36:49'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:36:49'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:36:49'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:36:49'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:36:49'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:36:49'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:36:49'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:36:49'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/15/2023 13:36:49'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/15/2023 13:36:49'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/15/2023 13:36:49'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/15/2023 13:36:49'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/15/2023 13:36:49'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/15/2023 13:36:49'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/15/2023 13:36:49'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/15/2023 13:36:49'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/15/2023 13:36:49'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'AG 5/15/2023 13:36:49'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'AG 5/15/2023 13:36:49'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'AG 5/15/2023 13:36:49'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'AG 5/15/2023 13:36:49'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:39:38'!
test23ManyCommandsBackwardsShouldMoveBackwardsManyTimes

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'bbb'.
	
	self assert: rover position equals: 3@0.
	self assert: rover direction equals: #Oeste.! !

!methodRemoval: MarsRoverTest #test23 stamp: 'AG 5/15/2023 13:39:39'!
test23

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'bbb'.
	
	self assert: rover position equals: 3@0.
	self assert: rover direction equals: #Oeste.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:39:50'!
test24ManyCommandsBackwardsShouldMoveBackwardsManyTimes

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'fff'.
	
	self assert: rover position equals: -3@0.
	self assert: rover direction equals: #Oeste.! !

!methodRemoval: MarsRoverTest #test24 stamp: 'AG 5/15/2023 13:39:50'!
test24

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'fff'.
	
	self assert: rover position equals: -3@0.
	self assert: rover direction equals: #Oeste.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:40:19'!
test24ManyCommandsForwardsShouldMoveForwardManyTimes

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'fff'.
	
	self assert: rover position equals: -3@0.
	self assert: rover direction equals: #Oeste.! !

!methodRemoval: MarsRoverTest #test24ManyCommandsBackwardsShouldMoveBackwardsManyTimes stamp: 'AG 5/15/2023 13:40:19'!
test24ManyCommandsBackwardsShouldMoveBackwardsManyTimes

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'fff'.
	
	self assert: rover position equals: -3@0.
	self assert: rover direction equals: #Oeste.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:41:40'!
test25RoverCanHandleManyDifferentsCommands

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'ffbl'.
	
	self assert: rover position equals: -1@0.
	self assert: rover direction equals: #Sur.! !

!methodRemoval: MarsRoverTest #test25 stamp: 'AG 5/15/2023 13:41:40'!
test25

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'ffbl'.
	
	self assert: rover position equals: -1@0.
	self assert: rover direction equals: #Sur.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:42:02'!
test26IncorrectCommandShouldRaiseException

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	
	self should: [rover commands: 'ffbltf'.]
		raise: Error
		withExceptionDo: [:error| self assert: 'comando erroneo' equals: error messageText.] ! !

!methodRemoval: MarsRoverTest #test26 stamp: 'AG 5/15/2023 13:42:02'!
test26

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	
	self should: [rover commands: 'ffbltf'.]
		raise: Error
		withExceptionDo: [:error| self assert: 'comando erroneo' equals: error messageText.] !

!classRenamed: #Backward as: #MoveBackward stamp: 'AG 5/15/2023 13:42:41'!
Smalltalk renameClassNamed: #Backward as: #MoveBackward!

!classRenamed: #Forward as: #MoveForward stamp: 'AG 5/15/2023 13:42:53'!
Smalltalk renameClassNamed: #Forward as: #MoveForward!

!classRenamed: #Left as: #RotateLeft stamp: 'AG 5/15/2023 13:43:00'!
Smalltalk renameClassNamed: #Left as: #RotateLeft!
!UnicodeCodePoint class methodsFor: 'as yet unclassified' stamp: 'AG 5/15/2023 13:43:00' prior: 50455739!
initializeNamedCharactersMap
	"Dictionary of named characters that we can enter in an editor using \name.
	Please keep the names short and try to follow the naming convention used in LaTeX."

	NamedCharactersMap _ Dictionary new.
	"Superscripts:"
	4 to: 9 do: [:each| NamedCharactersMap at: '^', each printString put: (self codePoint: 16r2070 + each)].
	"Subscripts:"
	0 to: 9 do: [:each| NamedCharactersMap at: '_', each printString put: (self codePoint: 16r2080 + each)].
	'hklmnpst' withIndexDo: [:each :i| NamedCharactersMap at: '_', each asString put: (self codePoint: 16r2094 + i)].
	'iruv' withIndexDo: [:each :i| NamedCharactersMap at: '_', each asString put: (self codePoint: 16r1D61 + i)].
	"Combining characters:"
	#(
		(acute 16r0301) ('''' 16r0301) (bar 16r0304) (breve 16r0306) (check 16r030C)
		(grave 16r0300) ('`' 16r0300) (hat 16r0302) (not 16r0338) (overline 16r0305)
		(tilde 16r0303) ('~' 16r0303) ('"' 16r0308) (vec 16r20D7)
	) do: [:each| NamedCharactersMap at: each first put: (self codePoint: each second)].
	#(
		"Some more superscripts and subscripts:"
		('^0' $⁰) ('^1' $¹) ('^2' $²) ('^3' $³) ('^i' $ⁱ) ('^n' $ⁿ) ('_j' $ⱼ)
		"Arrows:"
		(left $←) (right $→) (up $↑) (down $↓) (leftright $↔) (updown $↕)
		(Left $⇐) (Up $⇑) (Right $⇒) (Down $⇓) (Leftright $⇔) (Updown $⇕)
		(gets $←) (to $→) (mapsto $↦) (mapsfrom $↤) (implies $⟹) (impliedby $⟸) (iff $⟺)
		(from $←) (iso $↔) (From $⇐) (To $⇒) (dfrom $⇇) (dto $⇉) "non-standard"
		"Greek alphabet:"
		(alpha $α) (beta $β) (gamma $γ) (delta $δ) (epsilon $ε) (zeta $ζ) (eta $η) (theta $θ) (iota $ι) (kappa $κ) (lambda $λ) (mu $μ) (nu $ν) (xi $ξ) (omicron $ο) (pi $π) (rho $ρ) (sigmaf $ς) (sigma $σ) (tau $τ) (upsilon $υ) (phi $φ) (chi $χ) (psi $ψ) (omega $ω) (thetasym $ϑ) (upsih $ϒ) (piv $ϖ)
		(Alpha $Α) (Beta $Β) (Gamma $Γ) (Delta $Δ) (Epsilon $Ε) (Zeta $Ζ) (Eta $Η) (Theta $Θ) (Iota $Ι) (Kappa $Κ) (Lambda $Λ) (Mu $Μ) (Nu $Ν) (Xi $Ξ) (Omicron $Ο) (Pi $Π) (Rho $Ρ) (Sigma $Σ) (Tau $Τ) (Upsilon $Υ) (Phi $Φ) (Chi $Χ) (Psi $Ψ) (Omega $Ω)
		"Blackboard bold:"
		(A $𝔸) (B $𝔹) (C $ℂ) (D $𝔻) (E $𝔼) (F $𝔽) (G $𝔾) (H $ℍ) (I $𝕀) (J $𝕁) (K $𝕂) (L $𝕃) (M $𝕄) (N $ℕ) (O $𝕆) (P $ℙ) (Q $ℚ) (R $ℝ) (S $𝕊) (T $𝕋) (U $𝕌) (V $𝕍) (W $𝕎) (X $𝕏) (Y $𝕐) (Z $ℤ)
		"Math symbols:"
		(oplus $⊕) (otimes $⊗) (ominus $⊖) (odot $⊙) (oslash $⊘)
		(times $×) (div $÷) (circ $∘) (bullet $∙) (cdot $·) (pm $±) (wr $≀)
		(prod $⊓) (coprod $⊔) (perp $⊥)		
		(cap $∩) (cup $∪) (sqcap $⊓) (sqcup $⊔) (wedge $∧) (vee $∨) (perp $⊥) (parallel $∥)	
		(in $∈) (notin $∉) (exists $∃) (nexists $∄) (forall $∀) (emptyset $∅) (infty $∞) (aleph $ℵ) (ell $ℓ)
		(Im $ℑ) (Re $ℜ) (wp $℘)
		(sqrt $√) (partial $∂) (deg $°)
(leq $≤) (geq $≥) (neq $≠) (prec $≺) (succ $≻) (simeq $≃) (cong $≅) (equiv $≡) (approx $≈) (subset $⊂) (supset $⊃)
		"Other:"
		(langle $⟨) (rangle $⟩) (lceil $⌈) (rceil $⌉) (lfloor $⌊) (rfloor $⌋) (ltimes $⋉) (rtimes $⋊) 
		(lowast $⁎) (dag $†) (ddag $‡) (emdash $—) (endash $–) (questiondown $¿) (exclamdown $¡)
		(euro $€) (pounds $£) (celsius $℃) (farenheit $℉)
		(registered $®) (copyright $©) (trademark $™) (snowman $☃) (section $§))
	do: [:each| NamedCharactersMap at: each first put: each second]! !

!classRenamed: #Right as: #RotateRight stamp: 'AG 5/15/2023 13:43:22'!
Smalltalk renameClassNamed: #Right as: #RotateRight!
!UnicodeCodePoint class methodsFor: 'as yet unclassified' stamp: 'AG 5/15/2023 13:43:22' prior: 50614176!
initializeNamedCharactersMap
	"Dictionary of named characters that we can enter in an editor using \name.
	Please keep the names short and try to follow the naming convention used in LaTeX."

	NamedCharactersMap _ Dictionary new.
	"Superscripts:"
	4 to: 9 do: [:each| NamedCharactersMap at: '^', each printString put: (self codePoint: 16r2070 + each)].
	"Subscripts:"
	0 to: 9 do: [:each| NamedCharactersMap at: '_', each printString put: (self codePoint: 16r2080 + each)].
	'hklmnpst' withIndexDo: [:each :i| NamedCharactersMap at: '_', each asString put: (self codePoint: 16r2094 + i)].
	'iruv' withIndexDo: [:each :i| NamedCharactersMap at: '_', each asString put: (self codePoint: 16r1D61 + i)].
	"Combining characters:"
	#(
		(acute 16r0301) ('''' 16r0301) (bar 16r0304) (breve 16r0306) (check 16r030C)
		(grave 16r0300) ('`' 16r0300) (hat 16r0302) (not 16r0338) (overline 16r0305)
		(tilde 16r0303) ('~' 16r0303) ('"' 16r0308) (vec 16r20D7)
	) do: [:each| NamedCharactersMap at: each first put: (self codePoint: each second)].
	#(
		"Some more superscripts and subscripts:"
		('^0' $⁰) ('^1' $¹) ('^2' $²) ('^3' $³) ('^i' $ⁱ) ('^n' $ⁿ) ('_j' $ⱼ)
		"Arrows:"
		(left $←) (right $→) (up $↑) (down $↓) (leftright $↔) (updown $↕)
		(Left $⇐) (Up $⇑) (Right $⇒) (Down $⇓) (Leftright $⇔) (Updown $⇕)
		(gets $←) (to $→) (mapsto $↦) (mapsfrom $↤) (implies $⟹) (impliedby $⟸) (iff $⟺)
		(from $←) (iso $↔) (From $⇐) (To $⇒) (dfrom $⇇) (dto $⇉) "non-standard"
		"Greek alphabet:"
		(alpha $α) (beta $β) (gamma $γ) (delta $δ) (epsilon $ε) (zeta $ζ) (eta $η) (theta $θ) (iota $ι) (kappa $κ) (lambda $λ) (mu $μ) (nu $ν) (xi $ξ) (omicron $ο) (pi $π) (rho $ρ) (sigmaf $ς) (sigma $σ) (tau $τ) (upsilon $υ) (phi $φ) (chi $χ) (psi $ψ) (omega $ω) (thetasym $ϑ) (upsih $ϒ) (piv $ϖ)
		(Alpha $Α) (Beta $Β) (Gamma $Γ) (Delta $Δ) (Epsilon $Ε) (Zeta $Ζ) (Eta $Η) (Theta $Θ) (Iota $Ι) (Kappa $Κ) (Lambda $Λ) (Mu $Μ) (Nu $Ν) (Xi $Ξ) (Omicron $Ο) (Pi $Π) (Rho $Ρ) (Sigma $Σ) (Tau $Τ) (Upsilon $Υ) (Phi $Φ) (Chi $Χ) (Psi $Ψ) (Omega $Ω)
		"Blackboard bold:"
		(A $𝔸) (B $𝔹) (C $ℂ) (D $𝔻) (E $𝔼) (F $𝔽) (G $𝔾) (H $ℍ) (I $𝕀) (J $𝕁) (K $𝕂) (L $𝕃) (M $𝕄) (N $ℕ) (O $𝕆) (P $ℙ) (Q $ℚ) (R $ℝ) (S $𝕊) (T $𝕋) (U $𝕌) (V $𝕍) (W $𝕎) (X $𝕏) (Y $𝕐) (Z $ℤ)
		"Math symbols:"
		(oplus $⊕) (otimes $⊗) (ominus $⊖) (odot $⊙) (oslash $⊘)
		(times $×) (div $÷) (circ $∘) (bullet $∙) (cdot $·) (pm $±) (wr $≀)
		(prod $⊓) (coprod $⊔) (perp $⊥)		
		(cap $∩) (cup $∪) (sqcap $⊓) (sqcup $⊔) (wedge $∧) (vee $∨) (perp $⊥) (parallel $∥)	
		(in $∈) (notin $∉) (exists $∃) (nexists $∄) (forall $∀) (emptyset $∅) (infty $∞) (aleph $ℵ) (ell $ℓ)
		(Im $ℑ) (Re $ℜ) (wp $℘)
		(sqrt $√) (partial $∂) (deg $°)
(leq $≤) (geq $≥) (neq $≠) (prec $≺) (succ $≻) (simeq $≃) (cong $≅) (equiv $≡) (approx $≈) (subset $⊂) (supset $⊃)
		"Other:"
		(langle $⟨) (rangle $⟩) (lceil $⌈) (rceil $⌉) (lfloor $⌊) (rfloor $⌋) (ltimes $⋉) (rtimes $⋊) 
		(lowast $⁎) (dag $†) (ddag $‡) (emdash $—) (endash $–) (questiondown $¿) (exclamdown $¡)
		(euro $€) (pounds $£) (celsius $℃) (farenheit $℉)
		(registered $®) (copyright $©) (trademark $™) (snowman $☃) (section $§))
	do: [:each| NamedCharactersMap at: each first put: each second]! !

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/15/2023 13:43:38'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/15/2023 13:43:38'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/15/2023 13:43:38'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/15/2023 13:43:38'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:43:38'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:43:38'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:43:38'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:43:38'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:43:38'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:43:38'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:43:38'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:43:38'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/15/2023 13:43:38'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/15/2023 13:43:38'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/15/2023 13:43:39'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/15/2023 13:43:39'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/15/2023 13:43:39'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/15/2023 13:43:39'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/15/2023 13:43:39'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/15/2023 13:43:39'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/15/2023 13:43:39'!
PASSED!

!testRun: #MarsRoverTest #test23ManyCommandsBackwardsShouldMoveBackwardsManyTimes stamp: 'AG 5/15/2023 13:43:39'!
PASSED!

!testRun: #MarsRoverTest #test24ManyCommandsForwardsShouldMoveForwardManyTimes stamp: 'AG 5/15/2023 13:43:39'!
PASSED!

!testRun: #MarsRoverTest #test25RoverCanHandleManyDifferentsCommands stamp: 'AG 5/15/2023 13:43:39'!
PASSED!

!testRun: #MarsRoverTest #test26IncorrectCommandShouldRaiseException stamp: 'AG 5/15/2023 13:43:39'!
PASSED!
!Command class methodsFor: 'instance creation' stamp: 'AG 5/15/2023 13:45:02'!
invalidCommandErrorDescription
	^'comando erróneo!!!!'! !
!Command class methodsFor: 'instance creation' stamp: 'AG 5/15/2023 13:45:36' prior: 50613668!
with: aCharacter

	^(self subclasses detect: [:aCommandClass | aCommandClass canHandle: aCharacter ] ifNone:[self error: self invalidCommandErrorDescription ]) new.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:46:46' prior: 50614143!
test26IncorrectCommandShouldRaiseException

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	
	self should: [rover commands: 'ffbltf'.]
		raise: Error
		withExceptionDo: [:error| self assert: Command invalidCommandErrorDescription 
			equals: 
				error messageText.] ! !

!testRun: #MarsRoverTest #test26IncorrectCommandShouldRaiseException stamp: 'AG 5/15/2023 13:46:47'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/15/2023 13:46:47'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/15/2023 13:46:47'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/15/2023 13:46:47'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/15/2023 13:46:47'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:46:47'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:46:47'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:46:47'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:46:47'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:46:47'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:46:47'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:46:47'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:46:47'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/15/2023 13:46:47'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/15/2023 13:46:47'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/15/2023 13:46:47'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/15/2023 13:46:47'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/15/2023 13:46:47'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/15/2023 13:46:47'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/15/2023 13:46:47'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/15/2023 13:46:47'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/15/2023 13:46:47'!
PASSED!

!testRun: #MarsRoverTest #test23ManyCommandsBackwardsShouldMoveBackwardsManyTimes stamp: 'AG 5/15/2023 13:46:47'!
PASSED!

!testRun: #MarsRoverTest #test24ManyCommandsForwardsShouldMoveForwardManyTimes stamp: 'AG 5/15/2023 13:46:47'!
PASSED!

!testRun: #MarsRoverTest #test25RoverCanHandleManyDifferentsCommands stamp: 'AG 5/15/2023 13:46:47'!
PASSED!

!testRun: #MarsRoverTest #test26IncorrectCommandShouldRaiseException stamp: 'AG 5/15/2023 13:46:47'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:47:46'!
marsRoverAtOriginFacingNorth

	^ MarsRover inPosition: 0@0 atDirection: #Norte! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:47:46' prior: 50608684!
test01MarsRoverCreationHasInitialPositionAndDirection

	| rover |
	rover := self marsRoverAtOriginFacingNorth.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Norte.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:47:46' prior: 50608713!
test04MoveBackwardFacingNorthSubstractsOneYPosition

	| rover |
	rover := self marsRoverAtOriginFacingNorth.
	
	rover commands: 'b'.
	
	self assert: rover position equals: 0@-1.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:47:46' prior: 50608704!
test03MoveFowardNorthChangesYPosition

	| rover |
	rover := self marsRoverAtOriginFacingNorth.
	
	rover commands: 'f'.
	
	self assert: rover position equals: 0@1.
	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:47:46' prior: 50608694!
test02EmptyComandsShouldNotMove

	| rover |
	rover := self marsRoverAtOriginFacingNorth.
	rover commands: ''.
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Norte.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:47:46' prior: 50608788!
test14ManyCommandsRightShouldRotateRightManyTimes

	| rover |
	rover := self marsRoverAtOriginFacingNorth.
	
	rover commands: 'rrr'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Oeste.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:47:46' prior: 50608778!
test13TwoCommandRightShouldRotateRightTwice

	| rover |
	rover := self marsRoverAtOriginFacingNorth.
	
	rover commands: 'rr'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Sur.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:47:46' prior: 50609892!
test15ManyCommandsLeftShouldRotateLeftManyTimes

	| rover |
	rover := self marsRoverAtOriginFacingNorth.
	
	rover commands: 'lll'.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Este.! !

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/15/2023 13:47:48'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverCreationHasInitialPositionAndDirection stamp: 'AG 5/15/2023 13:47:48'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyComandsShouldNotMove stamp: 'AG 5/15/2023 13:47:48'!
PASSED!

!testRun: #MarsRoverTest #test03MoveFowardNorthChangesYPosition stamp: 'AG 5/15/2023 13:47:48'!
PASSED!

!testRun: #MarsRoverTest #test04MoveBackwardFacingNorthSubstractsOneYPosition stamp: 'AG 5/15/2023 13:47:48'!
PASSED!

!testRun: #MarsRoverTest #test05CommandLeftRotateFromNorteDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:47:48'!
PASSED!

!testRun: #MarsRoverTest #test06CommandLeftRotateFromSurDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:47:49'!
PASSED!

!testRun: #MarsRoverTest #test07CommandLeftRotateFromOesteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:47:49'!
PASSED!

!testRun: #MarsRoverTest #test08CommandLeftRotateFromEsteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:47:49'!
PASSED!

!testRun: #MarsRoverTest #test09CommandRightRotateFromEsteDirectionShouldChangeToSur stamp: 'AG 5/15/2023 13:47:49'!
PASSED!

!testRun: #MarsRoverTest #test10CommandRightRotateFromSurDirectionShouldChangeToOeste stamp: 'AG 5/15/2023 13:47:49'!
PASSED!

!testRun: #MarsRoverTest #test11CommandRightRotateFromOesteDirectionShouldChangeToNorte stamp: 'AG 5/15/2023 13:47:49'!
PASSED!

!testRun: #MarsRoverTest #test12CommandRightRotateFromNorteDirectionShouldChangeToEste stamp: 'AG 5/15/2023 13:47:49'!
PASSED!

!testRun: #MarsRoverTest #test13TwoCommandRightShouldRotateRightTwice stamp: 'AG 5/15/2023 13:47:49'!
PASSED!

!testRun: #MarsRoverTest #test14ManyCommandsRightShouldRotateRightManyTimes stamp: 'AG 5/15/2023 13:47:49'!
PASSED!

!testRun: #MarsRoverTest #test15ManyCommandsLeftShouldRotateLeftManyTimes stamp: 'AG 5/15/2023 13:47:49'!
PASSED!

!testRun: #MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/15/2023 13:47:49'!
PASSED!

!testRun: #MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/15/2023 13:47:49'!
PASSED!

!testRun: #MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/15/2023 13:47:49'!
PASSED!

!testRun: #MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/15/2023 13:47:49'!
PASSED!

!testRun: #MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/15/2023 13:47:49'!
PASSED!

!testRun: #MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/15/2023 13:47:49'!
PASSED!

!testRun: #MarsRoverTest #test23ManyCommandsBackwardsShouldMoveBackwardsManyTimes stamp: 'AG 5/15/2023 13:47:49'!
PASSED!

!testRun: #MarsRoverTest #test24ManyCommandsForwardsShouldMoveForwardManyTimes stamp: 'AG 5/15/2023 13:47:49'!
PASSED!

!testRun: #MarsRoverTest #test25RoverCanHandleManyDifferentsCommands stamp: 'AG 5/15/2023 13:47:49'!
PASSED!

!testRun: #MarsRoverTest #test26IncorrectCommandShouldRaiseException stamp: 'AG 5/15/2023 13:47:49'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:48:52'!
test16CommandForwardFacingSurReduceOneYPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Sur.
	
	rover commands: 'f'.
	
	self assert: rover position equals: 0@-1.
	self assert: rover direction equals: #Sur.! !

!methodRemoval: MarsRoverTest #test17CommandForwardFacingSurReduceOneYPosition stamp: 'AG 5/15/2023 13:48:52'!
test17CommandForwardFacingSurReduceOneYPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Sur.
	
	rover commands: 'f'.
	
	self assert: rover position equals: 0@-1.
	self assert: rover direction equals: #Sur.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:48:58'!
test17CommandForwardFacingOesteReduceOneXPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'f'.
	
	self assert: rover position equals: -1@0.
	self assert: rover direction equals: #Oeste.! !

!methodRemoval: MarsRoverTest #test18CommandForwardFacingOesteReduceOneXPosition stamp: 'AG 5/15/2023 13:48:58'!
test18CommandForwardFacingOesteReduceOneXPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'f'.
	
	self assert: rover position equals: -1@0.
	self assert: rover direction equals: #Oeste.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:49:03'!
test18CommandForwardFacingEsteIncrementOneXPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Este.
	
	rover commands: 'f'.
	
	self assert: rover position equals: 1@0.
	self assert: rover direction equals: #Este.! !

!methodRemoval: MarsRoverTest #test19CommandForwardFacingEsteIncrementOneXPosition stamp: 'AG 5/15/2023 13:49:04'!
test19CommandForwardFacingEsteIncrementOneXPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Este.
	
	rover commands: 'f'.
	
	self assert: rover position equals: 1@0.
	self assert: rover direction equals: #Este.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:49:09'!
test19CommandBackwardFacingEsteReduceOneXPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Este.
	
	rover commands: 'b'.
	
	self assert: rover position equals: -1@0.
	self assert: rover direction equals: #Este.! !

!methodRemoval: MarsRoverTest #test20CommandBackwardFacingEsteReduceOneXPosition stamp: 'AG 5/15/2023 13:49:09'!
test20CommandBackwardFacingEsteReduceOneXPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Este.
	
	rover commands: 'b'.
	
	self assert: rover position equals: -1@0.
	self assert: rover direction equals: #Este.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:49:13'!
test20CommandBackwardFacingSurIncrementsOneYPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Sur.
	
	rover commands: 'b'.
	
	self assert: rover position equals: 0@1.
	self assert: rover direction equals: #Sur.! !

!methodRemoval: MarsRoverTest #test21CommandBackwardFacingSurIncrementsOneYPosition stamp: 'AG 5/15/2023 13:49:13'!
test21CommandBackwardFacingSurIncrementsOneYPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Sur.
	
	rover commands: 'b'.
	
	self assert: rover position equals: 0@1.
	self assert: rover direction equals: #Sur.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:49:21'!
test21CommandBackwardFacingOesteIncrementsOneXPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'b'.
	
	self assert: rover position equals: 1@0.
	self assert: rover direction equals: #Oeste.! !

!methodRemoval: MarsRoverTest #test22CommandBackwardFacingOesteIncrementsOneXPosition stamp: 'AG 5/15/2023 13:49:21'!
test22CommandBackwardFacingOesteIncrementsOneXPosition

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'b'.
	
	self assert: rover position equals: 1@0.
	self assert: rover direction equals: #Oeste.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:49:25'!
test22ManyCommandsBackwardsShouldMoveBackwardsManyTimes

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'bbb'.
	
	self assert: rover position equals: 3@0.
	self assert: rover direction equals: #Oeste.! !

!methodRemoval: MarsRoverTest #test23ManyCommandsBackwardsShouldMoveBackwardsManyTimes stamp: 'AG 5/15/2023 13:49:26'!
test23ManyCommandsBackwardsShouldMoveBackwardsManyTimes

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'bbb'.
	
	self assert: rover position equals: 3@0.
	self assert: rover direction equals: #Oeste.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:49:33'!
test23ManyCommandsForwardsShouldMoveForwardManyTimes

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'fff'.
	
	self assert: rover position equals: -3@0.
	self assert: rover direction equals: #Oeste.! !

!methodRemoval: MarsRoverTest #test24ManyCommandsForwardsShouldMoveForwardManyTimes stamp: 'AG 5/15/2023 13:49:33'!
test24ManyCommandsForwardsShouldMoveForwardManyTimes

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'fff'.
	
	self assert: rover position equals: -3@0.
	self assert: rover direction equals: #Oeste.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:49:38'!
test24RoverCanHandleManyDifferentsCommands

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'ffbl'.
	
	self assert: rover position equals: -1@0.
	self assert: rover direction equals: #Sur.! !

!methodRemoval: MarsRoverTest #test25RoverCanHandleManyDifferentsCommands stamp: 'AG 5/15/2023 13:49:38'!
test25RoverCanHandleManyDifferentsCommands

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	rover commands: 'ffbl'.
	
	self assert: rover position equals: -1@0.
	self assert: rover direction equals: #Sur.!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 13:49:43'!
test25IncorrectCommandShouldRaiseException

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	
	self should: [rover commands: 'ffbltf'.]
		raise: Error
		withExceptionDo: [:error| self assert: Command invalidCommandErrorDescription 
			equals: 
				error messageText.] ! !

!methodRemoval: MarsRoverTest #test26IncorrectCommandShouldRaiseException stamp: 'AG 5/15/2023 13:49:43'!
test26IncorrectCommandShouldRaiseException

	| rover |
	rover := MarsRover inPosition: 0@0 atDirection: #Oeste.
	
	
	self should: [rover commands: 'ffbltf'.]
		raise: Error
		withExceptionDo: [:error| self assert: Command invalidCommandErrorDescription 
			equals: 
				error messageText.] !

!testRun: #MarsRoverTest #test25IncorrectCommandShouldRaiseException stamp: 'AG 5/15/2023 13:49:46'!
PASSED!
!MarsRoverState methodsFor: 'as yet unclassified' stamp: 'AG 5/15/2023 13:52:10'!
moveMarsRoverBackward: aMarsRover

	self subclassResponsibility .! !
!MarsRoverState methodsFor: 'as yet unclassified' stamp: 'AG 5/15/2023 13:52:19'!
moveMarsRoverForward: aMarsRover

	self subclassResponsibility .! !
!MarsRoverState methodsFor: 'as yet unclassified' stamp: 'AG 5/15/2023 13:52:40'!
rotateMarsRoverLeft: aMarsRover

	self subclassResponsibility .! !
!MarsRoverState methodsFor: 'as yet unclassified' stamp: 'AG 5/15/2023 13:52:52'!
rotateMarsRoverRight: aMarsRover

	self subclassResponsibility .! !

----SNAPSHOT----(15 May 2023 13:54:15) CuisUniversity-5706.image priorSource: 8981837!

----End fileIn of C:\Users\Usuario\Desktop\Exactas\Inge1\2023-1c\03-Stack\Stack-Solution-1.st----!
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 14:02:23' prior: 50614651!
test02EmptyComandsShouldNotMove

	| rover |
	rover := self marsRoverAtOriginFacingNorth.
	
	rover commands: ''.
	
	self assert: rover position equals: 0@0.
	self assert: rover direction equals: #Norte.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 14:03:50'!
marsRoverAtOriginFacingWest

	^ MarsRover inPosition: 0@0 atDirection: #Oeste! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 14:03:50' prior: 50614955!
test24RoverCanHandleManyDifferentsCommands

	| rover |
	rover := self marsRoverAtOriginFacingWest.
	
	rover commands: 'ffbl'.
	
	self assert: rover position equals: -1@0.
	self assert: rover direction equals: #Sur.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 14:03:50' prior: 50614934!
test23ManyCommandsForwardsShouldMoveForwardManyTimes

	| rover |
	rover := self marsRoverAtOriginFacingWest.
	
	rover commands: 'fff'.
	
	self assert: rover position equals: -3@0.
	self assert: rover direction equals: #Oeste.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 14:03:50' prior: 50614975!
test25IncorrectCommandShouldRaiseException

	| rover |
	rover := self marsRoverAtOriginFacingWest.
	
	
	self should: [rover commands: 'ffbltf'.]
		raise: Error
		withExceptionDo: [:error| self assert: Command invalidCommandErrorDescription 
			equals: 
				error messageText.] ! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 14:03:50' prior: 50614912!
test22ManyCommandsBackwardsShouldMoveBackwardsManyTimes

	| rover |
	rover := self marsRoverAtOriginFacingWest.
	
	rover commands: 'bbb'.
	
	self assert: rover position equals: 3@0.
	self assert: rover direction equals: #Oeste.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 14:03:50' prior: 50614807!
test17CommandForwardFacingOesteReduceOneXPosition

	| rover |
	rover := self marsRoverAtOriginFacingWest.
	
	rover commands: 'f'.
	
	self assert: rover position equals: -1@0.
	self assert: rover direction equals: #Oeste.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 14:03:50' prior: 50614891!
test21CommandBackwardFacingOesteIncrementsOneXPosition

	| rover |
	rover := self marsRoverAtOriginFacingWest.
	
	rover commands: 'b'.
	
	self assert: rover position equals: 1@0.
	self assert: rover direction equals: #Oeste.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 14:04:42'!
marsRoverAtOriginFacingSouth

	^ MarsRover inPosition: 0@0 atDirection: #Sur! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 14:04:42' prior: 50614786!
test16CommandForwardFacingSurReduceOneYPosition

	| rover |
	rover := self marsRoverAtOriginFacingSouth.
	
	rover commands: 'f'.
	
	self assert: rover position equals: 0@-1.
	self assert: rover direction equals: #Sur.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 14:04:42' prior: 50614870!
test20CommandBackwardFacingSurIncrementsOneYPosition

	| rover |
	rover := self marsRoverAtOriginFacingSouth.
	
	rover commands: 'b'.
	
	self assert: rover position equals: 0@1.
	self assert: rover direction equals: #Sur.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 14:05:03'!
marsRoverAtOriginFacingEast

	^ MarsRover inPosition: 0@0 atDirection: #Este! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 14:05:03' prior: 50614828!
test18CommandForwardFacingEsteIncrementOneXPosition

	| rover |
	rover := self marsRoverAtOriginFacingEast.
	
	rover commands: 'f'.
	
	self assert: rover position equals: 1@0.
	self assert: rover direction equals: #Este.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'AG 5/15/2023 14:05:04' prior: 50614849!
test19CommandBackwardFacingEsteReduceOneXPosition

	| rover |
	rover := self marsRoverAtOriginFacingEast.
	
	rover commands: 'b'.
	
	self assert: rover position equals: -1@0.
	self assert: rover direction equals: #Este.! !
!MarsRover methodsFor: 'command private' stamp: 'AG 5/15/2023 14:06:16' prior: 50610744!
moveBackward
	
	state moveMarsRoverBackward: self.
! !
!MarsRover methodsFor: 'command private' stamp: 'AG 5/15/2023 14:06:24' prior: 50611757!
moveForward

	state moveMarsRoverForward: self.
! !
!MarsRover methodsFor: 'command private' stamp: 'AG 5/15/2023 14:06:32' prior: 50608843!
rotateLeft
	
	state rotateMarsRoverLeft: self.! !

----SNAPSHOT----(15 May 2023 14:11:49) CuisUniversity-5706.image priorSource: 9067907!